<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>lucifer的网络博客</title>
  
  <subtitle>LeetCode 前端</subtitle>
  <link href="/blog/atom.xml" rel="self"/>
  
  <link href="https://lucifer.ren/blog/"/>
  <updated>2025-02-27T05:13:24.097Z</updated>
  <id>https://lucifer.ren/blog/</id>
  
  <author>
    <name>lucifer</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>我是一个区块链黑客（第一篇）</title>
    <link href="https://lucifer.ren/blog/2025/03/01/web3-hacker-1/"/>
    <id>https://lucifer.ren/blog/2025/03/01/web3-hacker-1/</id>
    <published>2025-02-28T16:00:00.000Z</published>
    <updated>2025-02-27T05:13:24.097Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;近期 Bybit的多签冷钱包被黑，损失约14.6亿美元，导致用户资产被盗，这事闹得沸沸扬扬，这次的事件给 web3 社区带来了很多的思考。经调查，Safe 官方声明指出，北韩骇客组织 Lazarus Group 透过入侵一名 Safe 开发者的设备，将恶意程式码注入前端网站「app.safe.global」，成功绕过多重签名验证，并伪装成正常交易提交批准。Verichains 调查报告显示，该恶意程式码具有针对性，只有在特定条件下 (如操作 Bybit 帐户时) 才会触发，以避免影响普通用户，达到掩人耳目的效果。Safe 团队强调，经外部安全研究人员一致确认，&lt;strong&gt;Safe 的智能合约本身并无漏洞，问题完全出在开发者设备遭入侵。&lt;/strong&gt;我们就算姑且认可这个结论。但是本次攻击暴露了多签钱包的技术性弱点、以及供应链攻击的致命风险，更让 Safe 作为业界主流安全解决方案的可靠性遭受质疑。&lt;/p&gt;
&lt;p&gt;今天我们就来聊一聊 web3 黑客攻击的一些常见手段。我会以教育和安全意识提升为目的，从理论和技术的角度探讨区块链黑客可能用来窃取用户资产的常见方法，并提供相应的代码示例。这些方法基于公开已知的攻击方式，主要用于展示漏洞如何被利用，以及如何防范。我不会提供任何实际可直接用于非法行为的代码，而是专注于技术原理的讲解。&lt;/p&gt;
    
    </summary>
    
      <category term="区块链" scheme="https://lucifer.ren/blog/categories/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
    
      <category term="区块链" scheme="https://lucifer.ren/blog/tags/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
      <category term="web3" scheme="https://lucifer.ren/blog/tags/web3/"/>
    
      <category term="黑客" scheme="https://lucifer.ren/blog/tags/%E9%BB%91%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>从零实现区块链 - 侧链与L2</title>
    <link href="https://lucifer.ren/blog/2025/03/01/web3-l2-from-zero/"/>
    <id>https://lucifer.ren/blog/2025/03/01/web3-l2-from-zero/</id>
    <published>2025-02-28T16:00:00.000Z</published>
    <updated>2025-02-23T14:34:24.876Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;web3 是一个非常流行的概念，它的基础是区块链技术。区块链技术是一种分布式账本技术，它的特点是去中心化、不可篡改、安全可靠。区块链技术的应用场景非常广泛，比如数字货币、智能合约、供应链金融等等。&lt;/p&gt;
&lt;p&gt;网上关于区块链的资料非常多，但是从零开始构建的资料却很少。熟悉我的朋友应该知道，我经常从零实现一些东西帮助我理解，比如从零实现 git，从零实现 webpack 打包器，从零实现一个框架等等。&lt;/p&gt;
&lt;p&gt;本文就是继上一篇 &lt;a href=&quot;https://lucifer.ren/blog/2025/02/16/web3-wallet/&quot; title=&quot;《从零开始构建区块链》&quot;&gt;《Web3 的入口 - 区块链钱包》&lt;/a&gt; 的文章，讲述侧链与 L2 的设计理念、技术原理和实现细节。&lt;/p&gt;
    
    </summary>
    
      <category term="区块链" scheme="https://lucifer.ren/blog/categories/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
    
      <category term="区块链" scheme="https://lucifer.ren/blog/tags/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
      <category term="web3" scheme="https://lucifer.ren/blog/tags/web3/"/>
    
      <category term="侧链" scheme="https://lucifer.ren/blog/tags/%E4%BE%A7%E9%93%BE/"/>
    
      <category term="L2" scheme="https://lucifer.ren/blog/tags/L2/"/>
    
  </entry>
  
  <entry>
    <title>传 DeepSeek 或于五月份前发布 R2 模型</title>
    <link href="https://lucifer.ren/blog/2025/02/26/lc-1472/"/>
    <id>https://lucifer.ren/blog/2025/02/26/lc-1472/</id>
    <published>2025-02-25T16:00:00.000Z</published>
    <updated>2025-02-26T14:19:14.545Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;据知情人透露，DeepSeek 原计划在五月初发布 R2，现在希望尽早发布，但没有提供具体细节。&lt;/p&gt;
    
    </summary>
    
      <category term="题解" scheme="https://lucifer.ren/blog/categories/%E9%A2%98%E8%A7%A3/"/>
    
    
      <category term="题解" scheme="https://lucifer.ren/blog/tags/%E9%A2%98%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>外卖骑手抵触社保，只想到手更高</title>
    <link href="https://lucifer.ren/blog/2025/02/22/lc-3428/"/>
    <id>https://lucifer.ren/blog/2025/02/22/lc-3428/</id>
    <published>2025-02-21T16:00:00.000Z</published>
    <updated>2025-02-23T14:34:49.402Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;前两天跟大家聊了京东给外卖骑手缴纳五险一金的事情。文章发出去后，有人留言说：“道理我都懂，但骑手们还是觉得交了社保，&lt;strong&gt;到手钱少了&lt;/strong&gt;啊！”这话戳中了本质——大家不是反对社保本身，而是希望“到手更高”。&lt;/p&gt;
    
    </summary>
    
      <category term="题解" scheme="https://lucifer.ren/blog/categories/%E9%A2%98%E8%A7%A3/"/>
    
    
      <category term="题解" scheme="https://lucifer.ren/blog/tags/%E9%A2%98%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>Web3 的入口 - 区块链钱包</title>
    <link href="https://lucifer.ren/blog/2025/02/16/web3-wallet/"/>
    <id>https://lucifer.ren/blog/2025/02/16/web3-wallet/</id>
    <published>2025-02-15T16:00:00.000Z</published>
    <updated>2025-02-18T13:40:51.323Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;web3 是一个非常流行的概念，它的基础是区块链技术。区块链技术是一种分布式账本技术，它的特点是去中心化、不可篡改、安全可靠。区块链技术的应用场景非常广泛，比如数字货币、智能合约、供应链金融等等。&lt;/p&gt;
&lt;p&gt;网上关于区块链的资料非常多，但是从零开始构建的资料却很少。熟悉我的朋友应该知道，我经常从零实现一些东西帮助我理解，比如从零实现 git，从零实现 webpack 打包器，从零实现一个框架等等。&lt;/p&gt;
&lt;p&gt;本文就是继上一篇 &lt;a href=&quot;https://lucifer.ren/blog/2024/11/22/web3-zero-to-one/&quot; title=&quot;《从零开始构建区块链》&quot;&gt;《从零开始构建区块链》&lt;/a&gt; 的文章，讲述区块链钱包是什么，有什么作用，以及其实现原理，希望能帮助你快速入门区块链技术。&lt;/p&gt;
    
    </summary>
    
      <category term="区块链" scheme="https://lucifer.ren/blog/categories/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
    
      <category term="区块链" scheme="https://lucifer.ren/blog/tags/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
      <category term="web3" scheme="https://lucifer.ren/blog/tags/web3/"/>
    
      <category term="钱包" scheme="https://lucifer.ren/blog/tags/%E9%92%B1%E5%8C%85/"/>
    
  </entry>
  
  <entry>
    <title>冷门但有用的算法知识 -  字符串的最小(大)表示法</title>
    <link href="https://lucifer.ren/blog/2025/01/18/min_max_str/"/>
    <id>https://lucifer.ren/blog/2025/01/18/min_max_str/</id>
    <published>2025-01-17T16:00:00.000Z</published>
    <updated>2025-01-20T13:33:09.900Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;今天来给大家介绍一种冷门但有用的算法知识——字符串的最小(大)表示法。尽管它是一种冷门算法，但是它确是一种母题。也就是说很多题目根据它换个皮就变成了一道新的题目。因此掌握它就可以掌握一整类题目。&lt;/p&gt;
    
    </summary>
    
    
      <category term="字符串" scheme="https://lucifer.ren/blog/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    
      <category term="最小表示法" scheme="https://lucifer.ren/blog/tags/%E6%9C%80%E5%B0%8F%E8%A1%A8%E7%A4%BA%E6%B3%95/"/>
    
      <category term="最大表示法" scheme="https://lucifer.ren/blog/tags/%E6%9C%80%E5%A4%A7%E8%A1%A8%E7%A4%BA%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>《幽灵诡计》 剧情分析</title>
    <link href="https://lucifer.ren/blog/2024/12/06/ghost-trick/"/>
    <id>https://lucifer.ren/blog/2024/12/06/ghost-trick/</id>
    <published>2024-12-05T16:00:00.000Z</published>
    <updated>2024-12-07T04:44:58.534Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://www.nintendo.com/us/store/products/ghost-trick-phantom-detective-switch/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;《幽灵诡计》&lt;/a&gt;是《逆转裁判》系列的企划、编剧和导演 - 巧舟的作品。我个人很喜欢逆转系列，不管是逆转裁判，逆转检视，还是大逆转裁判，都很有意思。《幽灵诡计》也是一款很有意思的游戏，剧情也很精彩。&lt;/p&gt;
&lt;p&gt;本文从游戏设定，人物，时间线，剧情等方面进行分析。如果有什么理解不对或者不到位的地方，欢迎指出。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://p.ipic.vip/l47aq7.png&quot; alt&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="游戏" scheme="https://lucifer.ren/blog/tags/%E6%B8%B8%E6%88%8F/"/>
    
  </entry>
  
  <entry>
    <title>回炉重铸， 91 天见证不一样的自己（第 15 期）</title>
    <link href="https://lucifer.ren/blog/2024/11/23/91algo-15/"/>
    <id>https://lucifer.ren/blog/2024/11/23/91algo-15/</id>
    <published>2024-11-22T16:00:00.000Z</published>
    <updated>2024-11-23T05:49:50.696Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;第 15 期，感谢大家一路的陪伴，我们会不辜负大家的信任，努力做的更好！&lt;/p&gt;
&lt;p&gt;力扣加加，一个努力做西湖区最好的算法题解的团队。就在今天它给大家带来了《91 天学算法》，帮助大家摆脱困境，征服算法。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://p.ipic.vip/befr2w.jpeg&quot; width=&quot;50%&quot;&gt;&lt;/p&gt;
&lt;p&gt;​
    
    </summary>
    
      <category term="力扣加加" scheme="https://lucifer.ren/blog/categories/%E5%8A%9B%E6%89%A3%E5%8A%A0%E5%8A%A0/"/>
    
      <category term="91天学算法" scheme="https://lucifer.ren/blog/categories/91%E5%A4%A9%E5%AD%A6%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="数据结构" scheme="https://lucifer.ren/blog/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="算法" scheme="https://lucifer.ren/blog/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="算法提高班" scheme="https://lucifer.ren/blog/tags/%E7%AE%97%E6%B3%95%E6%8F%90%E9%AB%98%E7%8F%AD/"/>
    
      <category term="91天学算法" scheme="https://lucifer.ren/blog/tags/91%E5%A4%A9%E5%AD%A6%E7%AE%97%E6%B3%95/"/>
    
      <category term="力扣加加" scheme="https://lucifer.ren/blog/tags/%E5%8A%9B%E6%89%A3%E5%8A%A0%E5%8A%A0/"/>
    
  </entry>
  
  <entry>
    <title>从零开始构建区块链</title>
    <link href="https://lucifer.ren/blog/2024/11/22/web3-zero-to-one/"/>
    <id>https://lucifer.ren/blog/2024/11/22/web3-zero-to-one/</id>
    <published>2024-11-21T16:00:00.000Z</published>
    <updated>2025-01-17T13:37:28.874Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;web3 是一个非常流行的概念，它的基础是区块链技术。区块链技术是一种分布式账本技术，它的特点是去中心化、不可篡改、安全可靠。区块链技术的应用场景非常广泛，比如数字货币、智能合约、供应链金融等等。&lt;/p&gt;
&lt;p&gt;网上关于区块链的资料非常多，但是从零开始构建的资料却很少。熟悉我的朋友应该知道，我经常从零实现一些东西帮助我理解，比如从零实现 git，从零实现 webpack 打包器，从零实现一个框架等等。&lt;/p&gt;
&lt;p&gt;本文就是一篇从零开始构建区块链的文章，希望能帮助你快速入门区块链技术。&lt;/p&gt;
    
    </summary>
    
      <category term="区块链" scheme="https://lucifer.ren/blog/categories/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
    
      <category term="区块链" scheme="https://lucifer.ren/blog/tags/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
      <category term="web3" scheme="https://lucifer.ren/blog/tags/web3/"/>
    
  </entry>
  
  <entry>
    <title>数字型递推</title>
    <link href="https://lucifer.ren/blog/2024/11/01/num-dp/"/>
    <id>https://lucifer.ren/blog/2024/11/01/num-dp/</id>
    <published>2024-10-31T16:00:00.000Z</published>
    <updated>2024-11-01T16:41:37.664Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;不知道大家有没有注意到有一种算法题目，题目的参数就是几个整数，然后让你求总的方案数。&lt;/p&gt;
&lt;p&gt;实际上仅仅是求总的方案数这一点，我的第一反应就是递推，然后就尝试找递推公式。如果再加上题目的参数是几个整数，那么这个题目大概率就是递推了，我把这种题目叫做&lt;strong&gt;数字型递推。&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="递推" scheme="https://lucifer.ren/blog/categories/%E9%80%92%E6%8E%A8/"/>
    
      <category term="动态规划" scheme="https://lucifer.ren/blog/categories/%E9%80%92%E6%8E%A8/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    
    
      <category term="动态规划" scheme="https://lucifer.ren/blog/tags/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    
  </entry>
  
  <entry>
    <title>为什么我的 node 进程一直在运行？</title>
    <link href="https://lucifer.ren/blog/2024/08/10/why-node-is-running/"/>
    <id>https://lucifer.ren/blog/2024/08/10/why-node-is-running/</id>
    <published>2024-08-09T16:00:00.000Z</published>
    <updated>2024-08-10T09:59:50.986Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;有时候我们打开进程管理器，发现 node 进程一直在运行，但是我们并不知道它在做什么。&lt;/p&gt;
&lt;p&gt;如果通过不停打日志的方式来找出原因，会非常耗时，而且不一定能找到问题所在。因为一个异步操作可能是由于另外一个异步操作触发的，这样就会导致我们很难找到根本原因，或者说定位过程会非常艰难。 那么有没有一种更有效率的方法可以帮助我们找出为什么 node 进程一直在运行呢？&lt;/p&gt;
    
    </summary>
    
      <category term="前端" scheme="https://lucifer.ren/blog/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="前端" scheme="https://lucifer.ren/blog/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="node" scheme="https://lucifer.ren/blog/tags/node/"/>
    
  </entry>
  
  <entry>
    <title>回炉重铸， 91 天见证不一样的自己（第 14 期）</title>
    <link href="https://lucifer.ren/blog/2024/08/04/91algo-14/"/>
    <id>https://lucifer.ren/blog/2024/08/04/91algo-14/</id>
    <published>2024-08-03T16:00:00.000Z</published>
    <updated>2024-11-23T05:33:47.060Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;第十四期，感谢大家一路的陪伴，我们会不辜负大家的信任，努力做的更好！&lt;/p&gt;
&lt;p&gt;力扣加加，一个努力做西湖区最好的算法题解的团队。就在今天它给大家带来了《91 天学算法》，帮助大家摆脱困境，征服算法。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://p.ipic.vip/befr2w.jpeg&quot; width=&quot;50%&quot;&gt;&lt;/p&gt;
&lt;p&gt;​
    
    </summary>
    
      <category term="力扣加加" scheme="https://lucifer.ren/blog/categories/%E5%8A%9B%E6%89%A3%E5%8A%A0%E5%8A%A0/"/>
    
      <category term="91天学算法" scheme="https://lucifer.ren/blog/categories/91%E5%A4%A9%E5%AD%A6%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="数据结构" scheme="https://lucifer.ren/blog/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="算法" scheme="https://lucifer.ren/blog/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="算法提高班" scheme="https://lucifer.ren/blog/tags/%E7%AE%97%E6%B3%95%E6%8F%90%E9%AB%98%E7%8F%AD/"/>
    
      <category term="91天学算法" scheme="https://lucifer.ren/blog/tags/91%E5%A4%A9%E5%AD%A6%E7%AE%97%E6%B3%95/"/>
    
      <category term="力扣加加" scheme="https://lucifer.ren/blog/tags/%E5%8A%9B%E6%89%A3%E5%8A%A0%E5%8A%A0/"/>
    
  </entry>
  
  <entry>
    <title>如何自己搭建一个 GPT 代码生成器？</title>
    <link href="https://lucifer.ren/blog/2024/07/13/gpt-code/"/>
    <id>https://lucifer.ren/blog/2024/07/13/gpt-code/</id>
    <published>2024-07-12T16:00:00.000Z</published>
    <updated>2024-07-13T07:28:52.145Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;自从 chatpgt 发布以来，有很多人都在使用它来生成代码，然后包装成一个产品给大家使用。有的甚至是付费的，用它来赚钱。&lt;/p&gt;
&lt;p&gt;使用方式基本上都是：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;你输入一个问题，然后它会给你生成一个代码片段。这个代码片段可能是一个函数，也可能是一个类，也可能是一个模块，甚至直接是一个代码库。&lt;/li&gt;
&lt;li&gt;你可以选择使用这个代码片段，也可以继续输入问题，让它生成更多的代码片段。或者对答案进行改进&lt;/li&gt;
&lt;li&gt;如果你对答案满意，你可以将答案复制到你的项目中，或者导出代码。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&quot;https://p.ipic.vip/vydqqw.png&quot; alt&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://p.ipic.vip/gufjyx.png&quot; alt&gt;&lt;/p&gt;
&lt;p&gt;这样的一款产品是怎么做出来的？代码复杂吗？我可以自己做一个吗？自己做的话，需要多少时间，多少钱？&lt;/p&gt;
    
    </summary>
    
      <category term="ai" scheme="https://lucifer.ren/blog/categories/ai/"/>
    
    
      <category term="ai" scheme="https://lucifer.ren/blog/tags/ai/"/>
    
      <category term="chatgpt" scheme="https://lucifer.ren/blog/tags/chatgpt/"/>
    
      <category term="代码生成器" scheme="https://lucifer.ren/blog/tags/%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>树状数组，线段树，傻傻分不清楚？</title>
    <link href="https://lucifer.ren/blog/2024/06/22/binary-index-tree/"/>
    <id>https://lucifer.ren/blog/2024/06/22/binary-index-tree/</id>
    <published>2024-06-21T16:00:00.000Z</published>
    <updated>2024-06-23T04:55:24.990Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;前面我们讲了线段树以及线段树是如何高效解决某些区间问题的。不少人也听说过树状数组，据说树状数组也可以解决一些区间问题。那么树状数组和线段树有什么区别呢？它们又有什么联系呢？本文将带你一探究竟。&lt;/p&gt;
    
    </summary>
    
      <category term="树状数组" scheme="https://lucifer.ren/blog/categories/%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84/"/>
    
    
      <category term="数据结构" scheme="https://lucifer.ren/blog/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="算法" scheme="https://lucifer.ren/blog/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="树状数组" scheme="https://lucifer.ren/blog/tags/%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84/"/>
    
      <category term="线段树" scheme="https://lucifer.ren/blog/tags/%E7%BA%BF%E6%AE%B5%E6%A0%91/"/>
    
  </entry>
  
  <entry>
    <title>用 Rust 开发前端基建工具</title>
    <link href="https://lucifer.ren/blog/2024/04/01/rust-node-binding/"/>
    <id>https://lucifer.ren/blog/2024/04/01/rust-node-binding/</id>
    <published>2024-03-31T16:00:00.000Z</published>
    <updated>2024-08-10T05:42:00.023Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;Rust 在最近几年在前端基建这一块有很大的发展。比如用于 lint 的 oxlint， 用于构建的 rspack 等等。这些工具都是用 Rust 写的，然后通过 Node.js 的 binding 连接到前端项目中。&lt;/p&gt;
&lt;p&gt;很多前端小伙伴看这些项目的源码的时候也会一头雾水，不知道怎么编译，怎么运行。这里我就以 rolldown 为例简单介绍一下如何用 Rust 开发前端基建工具。&lt;/p&gt;
&lt;p&gt;​
    
    </summary>
    
      <category term="rust" scheme="https://lucifer.ren/blog/categories/rust/"/>
    
      <category term="node binding" scheme="https://lucifer.ren/blog/categories/rust/node-binding/"/>
    
      <category term="node-gyp" scheme="https://lucifer.ren/blog/categories/rust/node-binding/node-gyp/"/>
    
    
      <category term="rust" scheme="https://lucifer.ren/blog/tags/rust/"/>
    
      <category term="node binding" scheme="https://lucifer.ren/blog/tags/node-binding/"/>
    
      <category term="node-gyp" scheme="https://lucifer.ren/blog/tags/node-gyp/"/>
    
  </entry>
  
  <entry>
    <title>回炉重铸， 91 天见证不一样的自己（第 13 期）</title>
    <link href="https://lucifer.ren/blog/2024/03/28/91algo-13/"/>
    <id>https://lucifer.ren/blog/2024/03/28/91algo-13/</id>
    <published>2024-03-27T16:00:00.000Z</published>
    <updated>2024-08-04T13:28:12.520Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;第十三期，感谢大家一路的陪伴，我们会不辜负大家的信任，努力做的更好！&lt;/p&gt;
&lt;p&gt;力扣加加，一个努力做西湖区最好的算法题解的团队。就在今天它给大家带来了《91 天学算法》，帮助大家摆脱困境，征服算法。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://p.ipic.vip/befr2w.jpeg&quot; width=&quot;50%&quot;&gt;&lt;/p&gt;
&lt;p&gt;​
    
    </summary>
    
      <category term="力扣加加" scheme="https://lucifer.ren/blog/categories/%E5%8A%9B%E6%89%A3%E5%8A%A0%E5%8A%A0/"/>
    
      <category term="91天学算法" scheme="https://lucifer.ren/blog/categories/91%E5%A4%A9%E5%AD%A6%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="数据结构" scheme="https://lucifer.ren/blog/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="算法" scheme="https://lucifer.ren/blog/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="算法提高班" scheme="https://lucifer.ren/blog/tags/%E7%AE%97%E6%B3%95%E6%8F%90%E9%AB%98%E7%8F%AD/"/>
    
      <category term="91天学算法" scheme="https://lucifer.ren/blog/tags/91%E5%A4%A9%E5%AD%A6%E7%AE%97%E6%B3%95/"/>
    
      <category term="力扣加加" scheme="https://lucifer.ren/blog/tags/%E5%8A%9B%E6%89%A3%E5%8A%A0%E5%8A%A0/"/>
    
  </entry>
  
  <entry>
    <title>How To Make Monney</title>
    <link href="https://lucifer.ren/blog/2024/03/10/make-money/"/>
    <id>https://lucifer.ren/blog/2024/03/10/make-money/</id>
    <published>2024-03-09T16:00:00.000Z</published>
    <updated>2024-10-27T15:36:18.739Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;理财是一个很复杂的话题。关于理财，一直有很有多问题。&lt;/p&gt;
&lt;p&gt;世界上有哪些赚钱的方法？具体如何操作？它们的赚钱逻辑是什么？什么情况下会亏钱？到底能挣多少？有没有跑路的风险？等等。&lt;/p&gt;
&lt;p&gt;这篇文章尝试管中窥豹，主要是帮助自己加深对理财的理解。如果这也可以帮助到其他人，那就再好不好了。&lt;/p&gt;
    
    </summary>
    
      <category term="理财" scheme="https://lucifer.ren/blog/categories/%E7%90%86%E8%B4%A2/"/>
    
    
      <category term="理财" scheme="https://lucifer.ren/blog/tags/%E7%90%86%E8%B4%A2/"/>
    
  </entry>
  
  <entry>
    <title>kuma - css-in-js 的未来？</title>
    <link href="https://lucifer.ren/blog/2024/03/07/kuma/"/>
    <id>https://lucifer.ren/blog/2024/03/07/kuma/</id>
    <published>2024-03-06T16:00:00.000Z</published>
    <updated>2024-03-10T13:06:01.037Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;kuma 是一个炙手可热的 css-in-js 的解决方案，有人甚至说他是 css-in-js 的未来，这篇文章我们来探讨一下 css-in-js 与 kuma。&lt;/p&gt;
    
    </summary>
    
      <category term="前端" scheme="https://lucifer.ren/blog/categories/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="css-in-js" scheme="https://lucifer.ren/blog/categories/%E5%89%8D%E7%AB%AF/css-in-js/"/>
    
    
      <category term="前端" scheme="https://lucifer.ren/blog/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="css-in-js" scheme="https://lucifer.ren/blog/tags/css-in-js/"/>
    
  </entry>
  
  <entry>
    <title>关于 Error Boundaries， 你需要知道的一切</title>
    <link href="https://lucifer.ren/blog/2024/01/28/error-boundaries/"/>
    <id>https://lucifer.ren/blog/2024/01/28/error-boundaries/</id>
    <published>2024-01-27T16:00:00.000Z</published>
    <updated>2024-01-28T08:36:22.853Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;在我们的应用中，难免会遇到一些异常情况，比如网络请求失败，或者是用户输入了一些非法的数据等等。这些异常情况如果没有得到处理，就会导致应用崩溃，从而影响用户体验。而 Error Boundaries 就是用可以处理这些异常情况中的一部分。&lt;/p&gt;
    
    </summary>
    
      <category term="前端" scheme="https://lucifer.ren/blog/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="前端" scheme="https://lucifer.ren/blog/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="异常处理" scheme="https://lucifer.ren/blog/tags/%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>回炉重铸， 91 天见证不一样的自己（第 12 期）</title>
    <link href="https://lucifer.ren/blog/2023/11/02/91algo-12/"/>
    <id>https://lucifer.ren/blog/2023/11/02/91algo-12/</id>
    <published>2023-11-01T16:00:00.000Z</published>
    <updated>2024-03-28T07:55:31.450Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;第十二期，感谢大家一路的陪伴，我们会不辜负大家的信任，努力做的更好！&lt;/p&gt;
&lt;p&gt;力扣加加，一个努力做西湖区最好的算法题解的团队。就在今天它给大家带来了《91 天学算法》，帮助大家摆脱困境，征服算法。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://p.ipic.vip/befr2w.jpeg&quot; width=&quot;50%&quot;&gt;&lt;/p&gt;
&lt;p&gt;​
    
    </summary>
    
      <category term="力扣加加" scheme="https://lucifer.ren/blog/categories/%E5%8A%9B%E6%89%A3%E5%8A%A0%E5%8A%A0/"/>
    
      <category term="91天学算法" scheme="https://lucifer.ren/blog/categories/91%E5%A4%A9%E5%AD%A6%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="数据结构" scheme="https://lucifer.ren/blog/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="算法" scheme="https://lucifer.ren/blog/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="算法提高班" scheme="https://lucifer.ren/blog/tags/%E7%AE%97%E6%B3%95%E6%8F%90%E9%AB%98%E7%8F%AD/"/>
    
      <category term="91天学算法" scheme="https://lucifer.ren/blog/tags/91%E5%A4%A9%E5%AD%A6%E7%AE%97%E6%B3%95/"/>
    
      <category term="力扣加加" scheme="https://lucifer.ren/blog/tags/%E5%8A%9B%E6%89%A3%E5%8A%A0%E5%8A%A0/"/>
    
  </entry>
  
</feed>
