<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>lucifer的网络博客</title>
  
  <subtitle>LeetCode 前端</subtitle>
  <link href="/blog/atom.xml" rel="self"/>
  
  <link href="https://lucifer.ren/blog/"/>
  <updated>2020-12-28T10:46:05.176Z</updated>
  <id>https://lucifer.ren/blog/</id>
  
  <author>
    <name>lucifer</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>几乎刷完了力扣所有的堆题，我发现了这些东西。。。</title>
    <link href="https://lucifer.ren/blog/2020/12/26/heap/"/>
    <id>https://lucifer.ren/blog/2020/12/26/heap/</id>
    <published>2020-12-25T16:00:00.000Z</published>
    <updated>2020-12-28T10:46:05.176Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://tva1.sinaimg.cn/large/0081Kckwly1glegve2v47j319g0u041x.jpg&quot; alt&gt;&lt;/p&gt;
&lt;p&gt;大家好，我是 lucifer。今天给大家带来的是《堆》专题。先上下本文的提纲，这个是我用 mindmap 画的一个脑图，之后我会继续完善，将其他专题逐步完善起来。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;大家也可以使用 vscode blink-mind 打开源文件查看，里面有一些笔记可以点开查看。源文件可以去我的公众号《力扣加加》回复脑图获取，以后脑图也会持续更新更多内容。vscode 插件地址：&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=awehook.vscode-blink-mind&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://marketplace.visualstudio.com/items?itemName=awehook.vscode-blink-mind&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;本系列包含以下专题：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://lucifer.ren/blog/2020/11/08/linked-list/&quot;&gt;几乎刷完了力扣所有的链表题，我发现了这些东西。。。&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://lucifer.ren/blog/2020/11/23/tree/&quot;&gt;几乎刷完了力扣所有的树题，我发现了这些东西。。。&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;几乎刷完了力扣所有的堆题，我发现了这些东西。。。（就是本文）&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="堆" scheme="https://lucifer.ren/blog/categories/%E5%A0%86/"/>
    
    
      <category term="LeetCode" scheme="https://lucifer.ren/blog/tags/LeetCode/"/>
    
      <category term="堆" scheme="https://lucifer.ren/blog/tags/%E5%A0%86/"/>
    
  </entry>
  
  <entry>
    <title>来和大家聊聊我是如何刷题的（第三弹）</title>
    <link href="https://lucifer.ren/blog/2020/12/21/shuati-silu3/"/>
    <id>https://lucifer.ren/blog/2020/12/21/shuati-silu3/</id>
    <published>2020-12-20T16:00:00.000Z</published>
    <updated>2020-12-21T07:21:46.861Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;前两篇的地址在这里，没有看过的同学建议先看下。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://lucifer.ren/blog/2020/11/29/shuati-silu/&quot;&gt;来和大家聊聊我是如何刷题的（第一弹）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://lucifer.ren/blog/2020/12/12/shuati-silu2/&quot;&gt;来和大家聊聊我是如何刷题的（第二弹）&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;本章或许是这个系列的最终章。这次给大家聊一点硬核的，聊一些几乎所有算法题都能用得上的超实用思想。&lt;/p&gt;
&lt;p&gt;上一节给大家抛出了两个问题，分别是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;如何锁定使用哪种算法&lt;/strong&gt;？比如我看到了这道题，我怎么知道该用什么解法呢？二分？动态规划？&lt;/li&gt;
&lt;li&gt;一看就会，一写就废， 如何克服？&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;今天，我就来圆一个当初吹下的牛逼。话不多说，直接上干货。如果你觉得有用，请三连支持我一下，让我能够坚持下去，给大家带来更多的干货。&lt;/p&gt;
    
    </summary>
    
      <category term="刷题方法" scheme="https://lucifer.ren/blog/categories/%E5%88%B7%E9%A2%98%E6%96%B9%E6%B3%95/"/>
    
    
      <category term="LeetCode" scheme="https://lucifer.ren/blog/tags/LeetCode/"/>
    
      <category term="刷题方法" scheme="https://lucifer.ren/blog/tags/%E5%88%B7%E9%A2%98%E6%96%B9%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>力扣 APP 全新改版，史诗级增强！</title>
    <link href="https://lucifer.ren/blog/2020/12/16/leetcode-app-1/"/>
    <id>https://lucifer.ren/blog/2020/12/16/leetcode-app-1/</id>
    <published>2020-12-15T16:00:00.000Z</published>
    <updated>2020-12-16T07:49:09.035Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://tva1.sinaimg.cn/large/0081Kckwly1glomy7awgxj31e00la4qp.jpg&quot; alt&gt;&lt;/p&gt;
&lt;p&gt;这次的改版真的是判若两人，PC 端的几乎所有功能都可以在新版 APP 中看到，并且体验更好。 不仅之前令我不爽的地方全部不见了，而且多了一些我想都没想到的好用功能。 比如&lt;strong&gt;摇一摇功能&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;我拿到了体验版第一时间就给大家写了这篇&lt;strong&gt;体验报告&lt;/strong&gt;。下面，西法就带你看看全新版本都有啥。&lt;/p&gt;
    
    </summary>
    
      <category term="软件工具" scheme="https://lucifer.ren/blog/categories/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="LeetCode" scheme="https://lucifer.ren/blog/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>来和大家聊聊我是如何刷题的（第二弹）</title>
    <link href="https://lucifer.ren/blog/2020/12/12/shuati-silu2/"/>
    <id>https://lucifer.ren/blog/2020/12/12/shuati-silu2/</id>
    <published>2020-12-11T16:00:00.000Z</published>
    <updated>2020-12-12T10:53:33.208Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;上一篇的地址在这里，没有看过的同学建议先看第一篇 &lt;a href=&quot;https://lucifer.ren/blog/2020/11/29/shuati-silu/&quot;&gt;来和大家聊聊我是如何刷题的（第一弹）&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;这次继续给大家聊聊怎么刷题， 预计分几篇文章来写，今天是第二篇，本系列至少会出三篇。这次分享的内容是&lt;strong&gt;代码书写技巧&lt;/strong&gt;以及&lt;strong&gt;调试技巧&lt;/strong&gt;。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;本系列旨在分享一些所有题目都适用的技巧以及一些刷题经验，帮助大家高效刷题。如果想重点突破某一类题目，可以关注我的专题系列。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;话不多说，直接上干货。&lt;/p&gt;
    
    </summary>
    
      <category term="刷题方法" scheme="https://lucifer.ren/blog/categories/%E5%88%B7%E9%A2%98%E6%96%B9%E6%B3%95/"/>
    
    
      <category term="LeetCode" scheme="https://lucifer.ren/blog/tags/LeetCode/"/>
    
      <category term="刷题方法" scheme="https://lucifer.ren/blog/tags/%E5%88%B7%E9%A2%98%E6%96%B9%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>我是如何把简单题目做成困难的？</title>
    <link href="https://lucifer.ren/blog/2020/12/04/91-tougao-xiaoyang-01/"/>
    <id>https://lucifer.ren/blog/2020/12/04/91-tougao-xiaoyang-01/</id>
    <published>2020-12-03T16:00:00.000Z</published>
    <updated>2020-12-05T10:44:53.641Z</updated>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;作者：小漾&lt;/li&gt;
&lt;li&gt;来源：&lt;a href=&quot;https://github.com/suukii/91-days-algorithm&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/suukii/91-days-algorithm&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;大家好，我是 lucifer，众所周知，我是一个小前端 (不是) 。其实，我是 lucifer 的 1379 号迷妹观察员，我是一粒纳米前端。(不要回答，不要回答，不要回答！！！)&lt;/p&gt;
&lt;p&gt;这是第一次投稿，所以可以废话几句，说一下我为什么做题和写题解。刚开始做算法题的时候，只是纯粹觉得好玩，所以不仅没有刷题计划，写题解也只是随便记下几笔，几个月后自己也看不懂的那种。一次偶然机会发现了 lucifer 的明星题解仓库，是找到了 onepiece 的感觉。受他的启发，我也开始写些尽量能让人看懂的题解，虽然还赶不上 lucifer，但跟自己比总算是有了些进步。&lt;/p&gt;
&lt;p&gt;身为迷妹观察员，lucifer 的 91 天学算法当然是不能错过的活动，现在活动的第二期正在 🔥 热进行中，有兴趣的同学了解一下呀。言归正传，跟着 91 课程我不再是漫无目的，而是计划清晰，按照课程安排的专题来做题，这样不仅更有利于了解某一类题涉及的相关知识，还能熟悉这类题的套路，再次遇见相似题型也能更快有思路。&lt;/p&gt;
&lt;p&gt;废话就这么多，以下是正文部分。等等，还有最后一句，上面的”不要回答”是个三体梗，不知道有没有人 GET 到我。&lt;/p&gt;
&lt;p&gt;今天给大家带来一道力扣简单题，官方题解只给出了一种最优解。本文比较贪心，打算带大家用&lt;strong&gt;四种姿势&lt;/strong&gt;来解决这道题。&lt;/p&gt;
&lt;p&gt;​
    
    </summary>
    
      <category term="力扣加加" scheme="https://lucifer.ren/blog/categories/%E5%8A%9B%E6%89%A3%E5%8A%A0%E5%8A%A0/"/>
    
      <category term="91天学算法" scheme="https://lucifer.ren/blog/categories/91%E5%A4%A9%E5%AD%A6%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="数据结构" scheme="https://lucifer.ren/blog/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="算法" scheme="https://lucifer.ren/blog/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="算法提高班" scheme="https://lucifer.ren/blog/tags/%E7%AE%97%E6%B3%95%E6%8F%90%E9%AB%98%E7%8F%AD/"/>
    
      <category term="91天学算法" scheme="https://lucifer.ren/blog/tags/91%E5%A4%A9%E5%AD%A6%E7%AE%97%E6%B3%95/"/>
    
      <category term="力扣加加" scheme="https://lucifer.ren/blog/tags/%E5%8A%9B%E6%89%A3%E5%8A%A0%E5%8A%A0/"/>
    
  </entry>
  
  <entry>
    <title>图解数据结构</title>
    <link href="https://lucifer.ren/blog/2020/12/02/91-tougao-tianxing-01/"/>
    <id>https://lucifer.ren/blog/2020/12/02/91-tougao-tianxing-01/</id>
    <published>2020-12-01T16:00:00.000Z</published>
    <updated>2020-12-02T11:16:39.018Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;参加了 lucifer 的 91 天学算法活动，不知不觉中已经一月有余。从盲目地做到有目的、有套路地去做。&lt;/p&gt;
&lt;p&gt;在 lucifer 的 91 课程中，从基础到进阶到专题，在这个月中，经历了基础篇的洗礼，不管在做题思路，还是做题速度都有了很大的提升，这个课程，没什么好说的，点赞点赞再点赞。也意识到学习好数据结构有多重要，不仅是思维方式的改变，还是在工程上的应用。&lt;/p&gt;
&lt;p&gt;对一个问题使用画图、举例、分解这 3 种方法将其化繁为简，形成清晰思路再动手写代码，一张好的图能够更好地帮助去理解一个算法。因此本次分享如何使用画图同时结合经典的题目的方法去阐述数据结构。&lt;/p&gt;
&lt;p&gt;​
    
    </summary>
    
      <category term="力扣加加" scheme="https://lucifer.ren/blog/categories/%E5%8A%9B%E6%89%A3%E5%8A%A0%E5%8A%A0/"/>
    
      <category term="91天学算法" scheme="https://lucifer.ren/blog/categories/91%E5%A4%A9%E5%AD%A6%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="数据结构" scheme="https://lucifer.ren/blog/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="算法" scheme="https://lucifer.ren/blog/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="算法提高班" scheme="https://lucifer.ren/blog/tags/%E7%AE%97%E6%B3%95%E6%8F%90%E9%AB%98%E7%8F%AD/"/>
    
      <category term="91天学算法" scheme="https://lucifer.ren/blog/tags/91%E5%A4%A9%E5%AD%A6%E7%AE%97%E6%B3%95/"/>
    
      <category term="力扣加加" scheme="https://lucifer.ren/blog/tags/%E5%8A%9B%E6%89%A3%E5%8A%A0%E5%8A%A0/"/>
    
  </entry>
  
  <entry>
    <title>来和大家聊聊我是如何刷题的（第一弹）</title>
    <link href="https://lucifer.ren/blog/2020/11/29/shuati-silu/"/>
    <id>https://lucifer.ren/blog/2020/11/29/shuati-silu/</id>
    <published>2020-11-28T16:00:00.000Z</published>
    <updated>2020-11-29T12:51:37.067Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;今天给大家聊聊怎么刷题， 预计分几篇文章来写，今天是第一篇。&lt;/p&gt;
&lt;p&gt;话不多说，直接上干货。&lt;/p&gt;
    
    </summary>
    
      <category term="刷题方法" scheme="https://lucifer.ren/blog/categories/%E5%88%B7%E9%A2%98%E6%96%B9%E6%B3%95/"/>
    
    
      <category term="LeetCode" scheme="https://lucifer.ren/blog/tags/LeetCode/"/>
    
      <category term="刷题方法" scheme="https://lucifer.ren/blog/tags/%E5%88%B7%E9%A2%98%E6%96%B9%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>几乎刷完了力扣所有的树题，我发现了这些东西。。。</title>
    <link href="https://lucifer.ren/blog/2020/11/23/tree/"/>
    <id>https://lucifer.ren/blog/2020/11/23/tree/</id>
    <published>2020-11-22T16:00:00.000Z</published>
    <updated>2020-12-12T10:32:35.799Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://tva1.sinaimg.cn/large/0081Kckwly1gkybjfbpubj30uo0u0gqz.jpg&quot; alt&gt;&lt;/p&gt;
&lt;p&gt;先上下本文的提纲，这个是我用 mindmap 画的一个脑图，之后我会继续完善，将其他专题逐步完善起来。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;大家也可以使用 vscode blink-mind 打开源文件查看，里面有一些笔记可以点开查看。源文件可以去我的公众号《力扣加加》回复脑图获取，以后脑图也会持续更新更多内容。vscode 插件地址：&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=awehook.vscode-blink-mind&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://marketplace.visualstudio.com/items?itemName=awehook.vscode-blink-mind&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;本系列包含以下专题：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://lucifer.ren/blog/2020/11/08/linked-list/&quot;&gt;几乎刷完了力扣所有的链表题，我发现了这些东西。。。&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;几乎刷完了力扣所有的树题，我发现了这些东西。。。(就是本文)&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="树" scheme="https://lucifer.ren/blog/categories/%E6%A0%91/"/>
    
    
      <category term="LeetCode" scheme="https://lucifer.ren/blog/tags/LeetCode/"/>
    
      <category term="树" scheme="https://lucifer.ren/blog/tags/%E6%A0%91/"/>
    
  </entry>
  
  <entry>
    <title>几乎刷完了力扣所有的链表题，我发现了这些东西。。。</title>
    <link href="https://lucifer.ren/blog/2020/11/08/linked-list/"/>
    <id>https://lucifer.ren/blog/2020/11/08/linked-list/</id>
    <published>2020-11-07T16:00:00.000Z</published>
    <updated>2020-11-23T07:35:58.254Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://tva1.sinaimg.cn/large/0081Kckwly1gki5nbjcgqj31be0u0q5w.jpg&quot; alt&gt;&lt;/p&gt;
&lt;p&gt;先上下本文的提纲，这个是我用 mindmap 画的一个脑图，之后我会继续完善，将其他专题逐步完善起来。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;大家也可以使用 vscode blink-mind 打开源文件查看，里面有一些笔记可以点开查看。源文件可以去我的公众号《力扣加加》回复脑图获取，以后脑图也会持续更新更多内容。vscode 插件地址：&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=awehook.vscode-blink-mind&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://marketplace.visualstudio.com/items?itemName=awehook.vscode-blink-mind&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;大家好，我是 lucifer。今天给大家带来的专题是《链表》。很多人觉得链表是一个很难的专题。实际上，只要你掌握了诀窍，它并没那么难。接下来，我们展开说说。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://leetcode-cn.com/tag/linked-list/&quot; title=&quot;链表标签&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;链表标签&lt;/a&gt;在 leetcode 一共有 &lt;strong&gt;54 道题&lt;/strong&gt;。 为了准备这个专题，我花了几天时间将 leetcode 几乎所有的链表题目都刷了一遍。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://tva1.sinaimg.cn/large/0081Kckwly1gki5vhm12jj310y0raadh.jpg&quot; alt&gt;&lt;/p&gt;
&lt;p&gt;可以看出，除了六个上锁的，其他我都刷了一遍。而实际上，这六个上锁的也没有什么难度，甚至和其他 48 道题差不多。&lt;/p&gt;
&lt;p&gt;通过集中刷这些题，我发现了一些有趣的信息，今天就分享给大家。&lt;/p&gt;
    
    </summary>
    
      <category term="链表" scheme="https://lucifer.ren/blog/categories/%E9%93%BE%E8%A1%A8/"/>
    
    
      <category term="LeetCode" scheme="https://lucifer.ren/blog/tags/LeetCode/"/>
    
      <category term="链表" scheme="https://lucifer.ren/blog/tags/%E9%93%BE%E8%A1%A8/"/>
    
  </entry>
  
  <entry>
    <title>单调栈解题模板秒杀八道题</title>
    <link href="https://lucifer.ren/blog/2020/11/03/monotone-stack/"/>
    <id>https://lucifer.ren/blog/2020/11/03/monotone-stack/</id>
    <published>2020-11-02T16:00:00.000Z</published>
    <updated>2020-12-26T05:48:23.843Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;顾名思义， 单调栈是一种栈。因此要学单调栈，首先要彻底搞懂栈。&lt;/p&gt;
    
    </summary>
    
      <category term="栈" scheme="https://lucifer.ren/blog/categories/%E6%A0%88/"/>
    
    
      <category term="栈" scheme="https://lucifer.ren/blog/tags/%E6%A0%88/"/>
    
      <category term="单调栈" scheme="https://lucifer.ren/blog/tags/%E5%8D%95%E8%B0%83%E6%A0%88/"/>
    
  </entry>
  
  <entry>
    <title>回炉重铸， 91 天见证不一样的自己（第二期）</title>
    <link href="https://lucifer.ren/blog/2020/10/19/91-algo-2/"/>
    <id>https://lucifer.ren/blog/2020/10/19/91-algo-2/</id>
    <published>2020-10-18T16:00:00.000Z</published>
    <updated>2020-10-19T09:25:35.018Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;力扣加加，一个努力做西湖区最好的算法题解的团队。就在今天它给大家带来了《91 天学算法》，帮助大家摆脱困境，征服算法。&lt;/p&gt;
&lt;img src=&quot;https://tva1.sinaimg.cn/large/007S8ZIlly1gf2atkdikgj30u70u0tct.jpg&quot; width=&quot;50%&quot;&gt;

&lt;p&gt;​
    
    </summary>
    
      <category term="力扣加加" scheme="https://lucifer.ren/blog/categories/%E5%8A%9B%E6%89%A3%E5%8A%A0%E5%8A%A0/"/>
    
      <category term="91天学算法" scheme="https://lucifer.ren/blog/categories/91%E5%A4%A9%E5%AD%A6%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="数据结构" scheme="https://lucifer.ren/blog/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="算法" scheme="https://lucifer.ren/blog/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="算法提高班" scheme="https://lucifer.ren/blog/tags/%E7%AE%97%E6%B3%95%E6%8F%90%E9%AB%98%E7%8F%AD/"/>
    
      <category term="91天学算法" scheme="https://lucifer.ren/blog/tags/91%E5%A4%A9%E5%AD%A6%E7%AE%97%E6%B3%95/"/>
    
      <category term="力扣加加" scheme="https://lucifer.ren/blog/tags/%E5%8A%9B%E6%89%A3%E5%8A%A0%E5%8A%A0/"/>
    
  </entry>
  
  <entry>
    <title>《西法的刷题秘籍》电子书开放下载啦~</title>
    <link href="https://lucifer.ren/blog/2020/10/18/leetcode-ebook-1/"/>
    <id>https://lucifer.ren/blog/2020/10/18/leetcode-ebook-1/</id>
    <published>2020-10-18T07:36:25.268Z</published>
    <updated>2020-10-18T07:38:04.286Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://tva1.sinaimg.cn/large/007S8ZIlly1ghluelm27rj30dw0780sm.jpg&quot; alt=&quot;leetcode.jpeg&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;2019-07-10 ：&lt;a href=&quot;./thanksGiving.md&quot;&gt;纪念项目 Star 突破 1W 的一个短文&lt;/a&gt;， 记录了项目的”兴起”之路，大家有兴趣可以看一下，如果对这个项目感兴趣，请&lt;strong&gt;点击一下 Star&lt;/strong&gt;， 项目会&lt;strong&gt;持续更新&lt;/strong&gt;，感谢大家的支持。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;2019-10-08: &lt;a href=&quot;./thanksGiving2.md&quot;&gt;纪念 LeetCode 项目 Star 突破 2W&lt;/a&gt;，并且 Github 搜索“LeetCode”，排名第一。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;2020-04-12: &lt;a href=&quot;./thanksGiving3.md&quot;&gt;项目突破三万 Star&lt;/a&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;2020-04-14: 官网&lt;code&gt;力扣加加&lt;/code&gt;上线啦 💐💐💐💐💐，有专题讲解，每日一题，下载区和视频题解，后续会增加更多内容，还不赶紧收藏起来？地址：&lt;a href=&quot;http://leetcode-solution.cn/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://leetcode-solution.cn/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;https://tva1.sinaimg.cn/large/007S8ZIlly1ghluemaoj3j30z90dtmy5.jpg&quot; alt&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="算法" scheme="https://lucifer.ren/blog/categories/%E7%AE%97%E6%B3%95/"/>
    
      <category term="LeetCode" scheme="https://lucifer.ren/blog/categories/LeetCode/"/>
    
    
      <category term="LeetCode" scheme="https://lucifer.ren/blog/tags/LeetCode/"/>
    
      <category term="电子书" scheme="https://lucifer.ren/blog/tags/%E7%94%B5%E5%AD%90%E4%B9%A6/"/>
    
  </entry>
  
  <entry>
    <title>TypeScript 练习题(第二弹)</title>
    <link href="https://lucifer.ren/blog/2020/10/13/ts-exercises-2/"/>
    <id>https://lucifer.ren/blog/2020/10/13/ts-exercises-2/</id>
    <published>2020-10-12T16:00:00.000Z</published>
    <updated>2020-10-18T07:27:40.165Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;TypeScript 的学习资料非常多，其中也不乏很多优秀的文章和教程。但是目前为止没有一个我特别满意的。原因有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;它们大多数没有一个清晰的主线，而是按照 API 组织章节的，内容在&lt;strong&gt;逻辑上&lt;/strong&gt;比较零散。&lt;/li&gt;
&lt;li&gt;大多是“讲是什么，怎么用“，而不是”讲为什么，讲原理“。&lt;/li&gt;
&lt;li&gt;大多数内容比较枯燥，趣味性比较低。都是干巴巴的文字，没有图片，缺乏能够引起强烈共鸣的例子。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;因此我的想法是做一套不同市面上大多数的 TypeScript 学习教程。以人类认知的角度思考问题，学习 TypeScript，通过通俗易懂的例子和图片来帮助大家建立 TypeScript 世界观。&lt;/p&gt;
&lt;p&gt;系列安排：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://lucifer.ren/blog/2020/08/04/ts-internal/&quot;&gt;上帝视角看 TypeScript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://lucifer.ren/blog/2020/08/15/ts-type-system/&quot;&gt;TypeScript 类型系统&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://lucifer.ren/blog/2020/08/21/ts-type/&quot;&gt;types 和 @types 是什么？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://lucifer.ren/blog/2020/06/16/ts-generics/&quot;&gt;你不知道的 TypeScript 泛型（万字长文，建议收藏）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://lucifer.ren/blog/2020/08/24/ts-config/&quot;&gt;TypeScript 配置文件该怎么写？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;TypeScript 是如何与 React，Vue，Webpack 集成的？&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://lucifer.ren/blog/2020/09/27/ts-exercises/&quot;&gt;TypeScript 练习题(第一弹)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;目录将来可能会有所调整。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;注意，我的系列文章基本不会讲 API，因此需要你有一定的 TypeScript 使用基础，推荐两个学习资料。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://jkchao.github.io/typescript-book-chinese/&quot; title=&quot;深入理解 TypeScript&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;深入理解 TypeScript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.typescriptlang.org/docs/home&quot; title=&quot;TypeScript 官方文档&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;TypeScript 官方文档&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;结合这两个资料和我的系列教程，掌握 TypeScript 指日可待。&lt;/p&gt;
&lt;p&gt;接下来，我们通过几个方面来从宏观的角度来看一下 TypeScript。&lt;/p&gt;
    
    </summary>
    
      <category term="前端" scheme="https://lucifer.ren/blog/categories/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="TypeScript" scheme="https://lucifer.ren/blog/categories/%E5%89%8D%E7%AB%AF/TypeScript/"/>
    
    
      <category term="前端" scheme="https://lucifer.ren/blog/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="TypeScript" scheme="https://lucifer.ren/blog/tags/TypeScript/"/>
    
  </entry>
  
  <entry>
    <title>西法喊你参加模拟面试~</title>
    <link href="https://lucifer.ren/blog/2020/10/07/mock-interview/"/>
    <id>https://lucifer.ren/blog/2020/10/07/mock-interview/</id>
    <published>2020-10-06T16:00:00.000Z</published>
    <updated>2020-10-07T11:29:21.429Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;很多粉丝向西法我反应：&lt;code&gt;做了很多题。看到新的题目还是不会， 看了题解之后又觉得自己会，但是自己写又写不出来。&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;这个现象实际上很常见， 破局的最有效方法就是&lt;strong&gt;多做题&lt;/strong&gt;。 是真正地做出来，而不是看了会了，要自己从零 coding。&lt;/p&gt;
&lt;p&gt;我之前讲过&lt;strong&gt;对于新手的建议是按 tag 刷， 对于老手或者马上要面试的我建议随机刷。&lt;/strong&gt; 今天我在补充一句，那就是不管大家用哪种方式刷，建议大家都通过模拟面试或者竞赛的形式刷。 时间条件允许的可以参加周赛，不允许的则可以模拟面试。&lt;/p&gt;
    
    </summary>
    
      <category term="模拟面试" scheme="https://lucifer.ren/blog/categories/%E6%A8%A1%E6%8B%9F%E9%9D%A2%E8%AF%95/"/>
    
    
      <category term="算法" scheme="https://lucifer.ren/blog/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="模拟面试" scheme="https://lucifer.ren/blog/tags/%E6%A8%A1%E6%8B%9F%E9%9D%A2%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>百度的算法面试题 - 祖玛游戏</title>
    <link href="https://lucifer.ren/blog/2020/10/06/zuma-game/"/>
    <id>https://lucifer.ren/blog/2020/10/06/zuma-game/</id>
    <published>2020-10-05T16:00:00.000Z</published>
    <updated>2020-10-06T03:55:55.427Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;这是一道百度的算法面试题， 让我来拷拷你~。&lt;/p&gt;
    
    </summary>
    
      <category term="LeetCode" scheme="https://lucifer.ren/blog/categories/LeetCode/"/>
    
      <category term="Hard" scheme="https://lucifer.ren/blog/categories/Hard/"/>
    
      <category term="回溯" scheme="https://lucifer.ren/blog/categories/%E5%9B%9E%E6%BA%AF/"/>
    
      <category term="双指针" scheme="https://lucifer.ren/blog/categories/%E5%8F%8C%E6%8C%87%E9%92%88/"/>
    
    
      <category term="Hard" scheme="https://lucifer.ren/blog/tags/Hard/"/>
    
      <category term="LeetCode" scheme="https://lucifer.ren/blog/tags/LeetCode/"/>
    
      <category term="回溯" scheme="https://lucifer.ren/blog/tags/%E5%9B%9E%E6%BA%AF/"/>
    
      <category term="双指针" scheme="https://lucifer.ren/blog/tags/%E5%8F%8C%E6%8C%87%E9%92%88/"/>
    
  </entry>
  
  <entry>
    <title>【西法带你学算法】一次搞定前缀和</title>
    <link href="https://lucifer.ren/blog/2020/09/27/atMostK/"/>
    <id>https://lucifer.ren/blog/2020/09/27/atMostK/</id>
    <published>2020-09-27T05:14:21.930Z</published>
    <updated>2020-11-07T16:46:29.820Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;我花了几天时间，从力扣中精选了五道相同思想的题目，来帮助大家解套，如果觉得文章对你有用，记得点赞分享，让我看到你的认可，有动力继续做下去。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/unique-substrings-in-wraparound-string/&quot; title=&quot;467. 环绕字符串中唯一的子字符串&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;467. 环绕字符串中唯一的子字符串&lt;/a&gt;(中等)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/number-of-subarrays-with-bounded-maximum/&quot; title=&quot;795. 区间子数组个数&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;795. 区间子数组个数&lt;/a&gt;(中等)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/fruit-into-baskets/&quot; title=&quot;904. 水果成篮&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;904. 水果成篮&lt;/a&gt;(中等)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/subarrays-with-k-different-integers/&quot; title=&quot;992. K 个不同整数的子数组&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;992. K 个不同整数的子数组&lt;/a&gt;（困难）&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/corporate-flight-bookings/&quot; title=&quot;1109. 航班预订统计&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;1109. 航班预订统计&lt;/a&gt;(中等)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;前四道题都是滑动窗口的子类型，我们知道滑动窗口适合在题目要求连续的情况下使用， 而&lt;a href=&quot;https://oi-wiki.org/basic/prefix-sum/&quot; title=&quot;前缀和&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;前缀和&lt;/a&gt;也是如此。二者在连续问题中，对于&lt;strong&gt;优化时间复杂度&lt;/strong&gt;有着很重要的意义。 因此如果一道题你可以用暴力解决出来，而且题目恰好有连续的限制， 那么滑动窗口和前缀和等技巧就应该被想到。&lt;/p&gt;
&lt;p&gt;除了这几道题， 还有很多题目都是类似的套路， 大家可以在学习过程中进行体会。今天我们就来一起学习一下。&lt;/p&gt;
    
    </summary>
    
      <category term="算法" scheme="https://lucifer.ren/blog/categories/%E7%AE%97%E6%B3%95/"/>
    
      <category term="LeetCode" scheme="https://lucifer.ren/blog/categories/LeetCode/"/>
    
    
      <category term="前缀和" scheme="https://lucifer.ren/blog/tags/%E5%89%8D%E7%BC%80%E5%92%8C/"/>
    
      <category term="滑动窗口" scheme="https://lucifer.ren/blog/tags/%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3/"/>
    
      <category term="LeetCode" scheme="https://lucifer.ren/blog/tags/LeetCode/"/>
    
      <category term="经验分享" scheme="https://lucifer.ren/blog/tags/%E7%BB%8F%E9%AA%8C%E5%88%86%E4%BA%AB/"/>
    
      <category term="困难" scheme="https://lucifer.ren/blog/tags/%E5%9B%B0%E9%9A%BE/"/>
    
      <category term="中等" scheme="https://lucifer.ren/blog/tags/%E4%B8%AD%E7%AD%89/"/>
    
      <category term="子数组" scheme="https://lucifer.ren/blog/tags/%E5%AD%90%E6%95%B0%E7%BB%84/"/>
    
      <category term="k 问题" scheme="https://lucifer.ren/blog/tags/k-%E9%97%AE%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>TypeScript 练习题</title>
    <link href="https://lucifer.ren/blog/2020/09/27/ts-exercises/"/>
    <id>https://lucifer.ren/blog/2020/09/27/ts-exercises/</id>
    <published>2020-09-26T16:00:00.000Z</published>
    <updated>2020-10-13T10:08:29.418Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;TypeScript 的学习资料非常多，其中也不乏很多优秀的文章和教程。但是目前为止没有一个我特别满意的。原因有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;它们大多数没有一个清晰的主线，而是按照 API 组织章节的，内容在&lt;strong&gt;逻辑上&lt;/strong&gt;比较零散。&lt;/li&gt;
&lt;li&gt;大多是“讲是什么，怎么用“，而不是”讲为什么，讲原理“。&lt;/li&gt;
&lt;li&gt;大多数内容比较枯燥，趣味性比较低。都是干巴巴的文字，没有图片，缺乏能够引起强烈共鸣的例子。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;因此我的想法是做一套不同市面上大多数的 TypeScript 学习教程。以人类认知的角度思考问题，学习 TypeScript，通过通俗易懂的例子和图片来帮助大家建立 TypeScript 世界观。&lt;/p&gt;
&lt;p&gt;系列安排：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://lucifer.ren/blog/2020/08/04/ts-internal/&quot;&gt;上帝视角看 TypeScript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://lucifer.ren/blog/2020/08/15/ts-type-system/&quot;&gt;TypeScript 类型系统&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://lucifer.ren/blog/2020/08/21/ts-type/&quot;&gt;types 和 @types 是什么？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://lucifer.ren/blog/2020/06/16/ts-generics/&quot;&gt;你不知道的 TypeScript 泛型（万字长文，建议收藏）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://lucifer.ren/blog/2020/08/24/ts-config/&quot;&gt;TypeScript 配置文件该怎么写？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;TypeScript 是如何与 React，Vue，Webpack 集成的？&lt;/li&gt;
&lt;li&gt;TypeScript 练习题（就是本文）&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;目录将来可能会有所调整。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;注意，我的系列文章基本不会讲 API，因此需要你有一定的 TypeScript 使用基础，推荐两个学习资料。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://jkchao.github.io/typescript-book-chinese/&quot; title=&quot;深入理解 TypeScript&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;深入理解 TypeScript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.typescriptlang.org/docs/home&quot; title=&quot;TypeScript 官方文档&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;TypeScript 官方文档&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;结合这两个资料和我的系列教程，掌握 TypeScript 指日可待。&lt;/p&gt;
&lt;p&gt;接下来，我们通过几个方面来从宏观的角度来看一下 TypeScript。&lt;/p&gt;
    
    </summary>
    
      <category term="前端" scheme="https://lucifer.ren/blog/categories/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="TypeScript" scheme="https://lucifer.ren/blog/categories/%E5%89%8D%E7%AB%AF/TypeScript/"/>
    
    
      <category term="前端" scheme="https://lucifer.ren/blog/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="TypeScript" scheme="https://lucifer.ren/blog/tags/TypeScript/"/>
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://lucifer.ren/blog/2020/09/19/generator&amp;iterator/"/>
    <id>https://lucifer.ren/blog/2020/09/19/generator&amp;iterator/</id>
    <published>2020-09-19T06:36:38.225Z</published>
    <updated>2020-09-19T06:44:59.504Z</updated>
    
    <summary type="html">
    
      
      
        
        
          
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>字节跳动的算法面试题是什么难度？（第二弹）</title>
    <link href="https://lucifer.ren/blog/2020/09/06/byte-dance-algo-ex-2017/"/>
    <id>https://lucifer.ren/blog/2020/09/06/byte-dance-algo-ex-2017/</id>
    <published>2020-09-05T16:00:00.000Z</published>
    <updated>2020-09-14T09:06:58.597Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;由于 lucifer 我是一个小前端， 最近也在准备写一个《前端如何搞定算法面试》的专栏，因此最近没少看各大公司的面试题。都说字节跳动算法题比较难，我就先拿 ta 下手，做了几套 。这次我们就拿一套 &lt;code&gt;字节跳动2017秋招编程题汇总&lt;/code&gt;来看下字节的算法笔试题的难度几何。地址：&lt;a href=&quot;https://www.nowcoder.com/test/6035789/summary&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.nowcoder.com/test/6035789/summary&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;​
    
    </summary>
    
      <category term="数据结构" scheme="https://lucifer.ren/blog/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="算法" scheme="https://lucifer.ren/blog/categories/%E7%AE%97%E6%B3%95/"/>
    
      <category term="数组" scheme="https://lucifer.ren/blog/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%95%B0%E7%BB%84/"/>
    
      <category term="滑动窗口" scheme="https://lucifer.ren/blog/categories/%E7%AE%97%E6%B3%95/%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3/"/>
    
      <category term="面试" scheme="https://lucifer.ren/blog/categories/%E9%9D%A2%E8%AF%95/"/>
    
      <category term="字节跳动" scheme="https://lucifer.ren/blog/categories/%E9%9D%A2%E8%AF%95/%E5%AD%97%E8%8A%82%E8%B7%B3%E5%8A%A8/"/>
    
    
      <category term="数据结构" scheme="https://lucifer.ren/blog/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="算法" scheme="https://lucifer.ren/blog/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="滑动窗口" scheme="https://lucifer.ren/blog/tags/%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3/"/>
    
      <category term="面试" scheme="https://lucifer.ren/blog/tags/%E9%9D%A2%E8%AF%95/"/>
    
      <category term="字节跳动" scheme="https://lucifer.ren/blog/tags/%E5%AD%97%E8%8A%82%E8%B7%B3%E5%8A%A8/"/>
    
  </entry>
  
  <entry>
    <title>字节跳动的算法面试题是什么难度？</title>
    <link href="https://lucifer.ren/blog/2020/09/06/byte-dance-algo-ex/"/>
    <id>https://lucifer.ren/blog/2020/09/06/byte-dance-algo-ex/</id>
    <published>2020-09-05T16:00:00.000Z</published>
    <updated>2020-09-06T13:14:52.739Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;由于 lucifer 我是一个小前端， 最近也在准备写一个《前端如何搞定算法面试》的专栏，因此最近没少看各大公司的面试题。都说字节跳动算法题比较难，我就先拿 ta 下手，做了几套 。这次我们就拿一套 &lt;code&gt;2018 年的前端校招（第四批）&lt;/code&gt;来看下字节的算法笔试题的难度几何。地址：&lt;a href=&quot;https://www.nowcoder.com/test/8536639/summary&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.nowcoder.com/test/8536639/summary&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;实际上，这套字节的前端岗位笔试题和后端以及算法岗位的笔试题也只有一道题目（红包的设计题被换成了另外一个设计题）不一样而已，因此也不需要担心你不是前端，题目类型和难度和你的岗位不匹配。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;​
    
    </summary>
    
      <category term="数据结构" scheme="https://lucifer.ren/blog/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="算法" scheme="https://lucifer.ren/blog/categories/%E7%AE%97%E6%B3%95/"/>
    
      <category term="数组" scheme="https://lucifer.ren/blog/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%95%B0%E7%BB%84/"/>
    
      <category term="滑动窗口" scheme="https://lucifer.ren/blog/categories/%E7%AE%97%E6%B3%95/%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3/"/>
    
      <category term="面试" scheme="https://lucifer.ren/blog/categories/%E9%9D%A2%E8%AF%95/"/>
    
      <category term="字节跳动" scheme="https://lucifer.ren/blog/categories/%E9%9D%A2%E8%AF%95/%E5%AD%97%E8%8A%82%E8%B7%B3%E5%8A%A8/"/>
    
    
      <category term="数据结构" scheme="https://lucifer.ren/blog/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="算法" scheme="https://lucifer.ren/blog/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="滑动窗口" scheme="https://lucifer.ren/blog/tags/%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3/"/>
    
      <category term="面试" scheme="https://lucifer.ren/blog/tags/%E9%9D%A2%E8%AF%95/"/>
    
      <category term="字节跳动" scheme="https://lucifer.ren/blog/tags/%E5%AD%97%E8%8A%82%E8%B7%B3%E5%8A%A8/"/>
    
  </entry>
  
</feed>
