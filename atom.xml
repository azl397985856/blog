<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>lucifer的网络博客</title>
  
  <subtitle>LeetCode 前端</subtitle>
  <link href="/blog/atom.xml" rel="self"/>
  
  <link href="https://lucifer.ren/blog/"/>
  <updated>2020-02-03T05:15:54.238Z</updated>
  <id>https://lucifer.ren/blog/</id>
  
  <author>
    <name>lucifer</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>我的日程安排表系列</title>
    <link href="https://lucifer.ren/blog/2020/02/03/leetcode-%E6%88%91%E7%9A%84%E6%97%A5%E7%A8%8B%E5%AE%89%E6%8E%92%E8%A1%A8%E7%B3%BB%E5%88%97/"/>
    <id>https://lucifer.ren/blog/2020/02/03/leetcode-我的日程安排表系列/</id>
    <published>2020-02-03T02:51:10.406Z</published>
    <updated>2020-02-03T05:15:54.238Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;《我的日程安排表》截止目前（2020-02-03）在 LeetCode 上一共有三道题，其中两个中等难度，一个困难难度,分别是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/my-calendar-i&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;729. 我的日程安排表 I&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/my-calendar-ii&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;731. 我的日程安排表 II&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/my-calendar-iii&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;732. 我的日程安排表 III&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;另外 LeetCode 上有一个类似的系列《会议室》，截止目前（2020-02-03）有两道题目。其中一个简单一个中等，分别是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/meeting-rooms/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;252. 会议室&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/meeting-rooms-ii/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;253. 会议室 II&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;今天我们就来攻克它们。&lt;/p&gt;
    
    </summary>
    
      <category term="LeetCode" scheme="https://lucifer.ren/blog/categories/LeetCode/"/>
    
    
      <category term="LeetCode" scheme="https://lucifer.ren/blog/tags/LeetCode/"/>
    
      <category term="算法系列" scheme="https://lucifer.ren/blog/tags/%E7%AE%97%E6%B3%95%E7%B3%BB%E5%88%97/"/>
    
  </entry>
  
  <entry>
    <title>BigPipe和微前端</title>
    <link href="https://lucifer.ren/blog/2020/02/02/bigpipe-and-micro-fe/"/>
    <id>https://lucifer.ren/blog/2020/02/02/bigpipe-and-micro-fe/</id>
    <published>2020-02-01T16:00:00.000Z</published>
    <updated>2020-02-02T07:05:11.796Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;你可能听说过 BigPipe，这是一个十多年前的技术，而 BigPipe 通常都会跟“性能优化”同时被提起。微前端也是一个很早被提出的技术，但是最近几年才开始比较流行。而目前微前端能够解决的最大的问题恐怕就是遗留系统改造。我们可以将新技术构造的系统和旧技术构造的系统完美融合到一起，彼此构建，发布，运行等不受干扰。 那么 BigPipe 究竟和微前端有什么关系呢，我为什么要把这两个放到一起来看？&lt;/p&gt;
    
    </summary>
    
    
      <category term="BigPipe" scheme="https://lucifer.ren/blog/tags/BigPipe/"/>
    
      <category term="微前端" scheme="https://lucifer.ren/blog/tags/%E5%BE%AE%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>Floyd-Warshall 解题模板，助你快速AC</title>
    <link href="https://lucifer.ren/blog/2020/02/01/1334.find-the-city-with-the-smallest-number-of-neighbors-at-a-threshold-distance/"/>
    <id>https://lucifer.ren/blog/2020/02/01/1334.find-the-city-with-the-smallest-number-of-neighbors-at-a-threshold-distance/</id>
    <published>2020-02-01T14:45:03.057Z</published>
    <updated>2020-02-01T14:48:16.559Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;Floyd-Warshall 是解决任意两点间的最短路径的一种算法，LeetCode 有很多题目都用了，掌握这套解题模板帮你快速 AC。&lt;/p&gt;
    
    </summary>
    
      <category term="数据结构" scheme="https://lucifer.ren/blog/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="图" scheme="https://lucifer.ren/blog/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%9B%BE/"/>
    
      <category term="解题模板" scheme="https://lucifer.ren/blog/categories/%E8%A7%A3%E9%A2%98%E6%A8%A1%E6%9D%BF/"/>
    
    
      <category term="数据结构" scheme="https://lucifer.ren/blog/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="算法" scheme="https://lucifer.ren/blog/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="解题模板" scheme="https://lucifer.ren/blog/tags/%E8%A7%A3%E9%A2%98%E6%A8%A1%E6%9D%BF/"/>
    
      <category term="图" scheme="https://lucifer.ren/blog/tags/%E5%9B%BE/"/>
    
      <category term="Floyd-Warshall" scheme="https://lucifer.ren/blog/tags/Floyd-Warshall/"/>
    
  </entry>
  
  <entry>
    <title>【LeetCode日记】 1332. 删除回文子序列</title>
    <link href="https://lucifer.ren/blog/2020/02/01/1332.remove-palindromic-subsequences/"/>
    <id>https://lucifer.ren/blog/2020/02/01/1332.remove-palindromic-subsequences/</id>
    <published>2020-02-01T12:26:45.779Z</published>
    <updated>2020-02-01T12:28:46.186Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;LeetCode 上有很多抖机灵的题目，需要你仔细审题，否则很容易被套路。这里就有一道，我们来看下。&lt;/p&gt;
&lt;p&gt;​
    
    </summary>
    
      <category term="算法" scheme="https://lucifer.ren/blog/categories/%E7%AE%97%E6%B3%95/"/>
    
      <category term="数据结构" scheme="https://lucifer.ren/blog/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="字符串" scheme="https://lucifer.ren/blog/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    
      <category term="回文" scheme="https://lucifer.ren/blog/categories/%E7%AE%97%E6%B3%95/%E5%9B%9E%E6%96%87/"/>
    
      <category term="Easy" scheme="https://lucifer.ren/blog/categories/Easy/"/>
    
    
      <category term="数据结构" scheme="https://lucifer.ren/blog/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="算法" scheme="https://lucifer.ren/blog/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="LeetCode日记" scheme="https://lucifer.ren/blog/tags/LeetCode%E6%97%A5%E8%AE%B0/"/>
    
      <category term="Easy" scheme="https://lucifer.ren/blog/tags/Easy/"/>
    
  </entry>
  
  <entry>
    <title>【LeetCode日记】 335. 路径交叉</title>
    <link href="https://lucifer.ren/blog/2020/01/31/335.self-crossing/"/>
    <id>https://lucifer.ren/blog/2020/01/31/335.self-crossing/</id>
    <published>2020-01-30T17:07:11.232Z</published>
    <updated>2020-01-30T17:10:33.464Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;这是一道 Hard 难度的题目，题目的难点在于我们不可以使用额外的空间完成。让我们来看下怎么做吧。&lt;/p&gt;
&lt;p&gt;​
    
    </summary>
    
      <category term="算法" scheme="https://lucifer.ren/blog/categories/%E7%AE%97%E6%B3%95/"/>
    
      <category term="数据结构" scheme="https://lucifer.ren/blog/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="hashtable" scheme="https://lucifer.ren/blog/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/hashtable/"/>
    
      <category term="就地算法" scheme="https://lucifer.ren/blog/categories/%E7%AE%97%E6%B3%95/%E5%B0%B1%E5%9C%B0%E7%AE%97%E6%B3%95/"/>
    
      <category term="Hard" scheme="https://lucifer.ren/blog/categories/Hard/"/>
    
    
      <category term="数据结构" scheme="https://lucifer.ren/blog/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="算法" scheme="https://lucifer.ren/blog/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="LeetCode日记" scheme="https://lucifer.ren/blog/tags/LeetCode%E6%97%A5%E8%AE%B0/"/>
    
      <category term="Hard" scheme="https://lucifer.ren/blog/tags/Hard/"/>
    
  </entry>
  
  <entry>
    <title>【LeetCode日记】 50. Pow(x, n)</title>
    <link href="https://lucifer.ren/blog/2020/01/29/50.powx-n/"/>
    <id>https://lucifer.ren/blog/2020/01/29/50.powx-n/</id>
    <published>2020-01-29T14:44:15.972Z</published>
    <updated>2020-01-29T14:50:43.468Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;这是一道让我们实现系统函数的造轮子题目，我们来看下。&lt;/p&gt;
&lt;p&gt;​
    
    </summary>
    
      <category term="算法" scheme="https://lucifer.ren/blog/categories/%E7%AE%97%E6%B3%95/"/>
    
      <category term="数据结构" scheme="https://lucifer.ren/blog/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="数学" scheme="https://lucifer.ren/blog/categories/%E7%AE%97%E6%B3%95/%E6%95%B0%E5%AD%A6/"/>
    
      <category term="hashtable" scheme="https://lucifer.ren/blog/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/hashtable/"/>
    
      <category term="位运算" scheme="https://lucifer.ren/blog/categories/%E7%AE%97%E6%B3%95/%E4%BD%8D%E8%BF%90%E7%AE%97/"/>
    
    
      <category term="数据结构" scheme="https://lucifer.ren/blog/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="算法" scheme="https://lucifer.ren/blog/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="LeetCode日记" scheme="https://lucifer.ren/blog/tags/LeetCode%E6%97%A5%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>【LeetCode日记】 874. 模拟行走机器人</title>
    <link href="https://lucifer.ren/blog/2020/01/29/874.walking-robot-simulation/"/>
    <id>https://lucifer.ren/blog/2020/01/29/874.walking-robot-simulation/</id>
    <published>2020-01-29T11:34:39.765Z</published>
    <updated>2020-01-29T12:05:37.678Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;这是一道 LeetCode 难度为 easy 的题目，没有高深的算法，有的只是套路，我们来看下。&lt;/p&gt;
&lt;p&gt;​
    
    </summary>
    
      <category term="数据结构" scheme="https://lucifer.ren/blog/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="hashtable" scheme="https://lucifer.ren/blog/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/hashtable/"/>
    
    
      <category term="数据结构" scheme="https://lucifer.ren/blog/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="算法" scheme="https://lucifer.ren/blog/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="LeetCode日记" scheme="https://lucifer.ren/blog/tags/LeetCode%E6%97%A5%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>一行代码就可以通过 LeetCode？来看下我是怎么做到的！</title>
    <link href="https://lucifer.ren/blog/2020/01/18/1227.airplane-seat-assignment-probability/"/>
    <id>https://lucifer.ren/blog/2020/01/18/1227.airplane-seat-assignment-probability/</id>
    <published>2020-01-18T15:46:42.563Z</published>
    <updated>2020-01-18T15:59:33.965Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;这是一道 LeetCode 为数不多的概率题，我们来看下。&lt;/p&gt;
&lt;p&gt;​
    
    </summary>
    
      <category term="算法" scheme="https://lucifer.ren/blog/categories/%E7%AE%97%E6%B3%95/"/>
    
      <category term="数学" scheme="https://lucifer.ren/blog/categories/%E7%AE%97%E6%B3%95/%E6%95%B0%E5%AD%A6/"/>
    
      <category term="概率" scheme="https://lucifer.ren/blog/categories/%E7%AE%97%E6%B3%95/%E6%A6%82%E7%8E%87/"/>
    
      <category term="递归" scheme="https://lucifer.ren/blog/categories/%E7%AE%97%E6%B3%95/%E9%80%92%E5%BD%92/"/>
    
      <category term="动态规划" scheme="https://lucifer.ren/blog/categories/%E7%AE%97%E6%B3%95/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    
    
      <category term="数学" scheme="https://lucifer.ren/blog/tags/%E6%95%B0%E5%AD%A6/"/>
    
      <category term="数据结构" scheme="https://lucifer.ren/blog/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="算法" scheme="https://lucifer.ren/blog/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="概率" scheme="https://lucifer.ren/blog/tags/%E6%A6%82%E7%8E%87/"/>
    
      <category term="递归" scheme="https://lucifer.ren/blog/tags/%E9%80%92%E5%BD%92/"/>
    
      <category term="动态规划" scheme="https://lucifer.ren/blog/tags/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    
  </entry>
  
  <entry>
    <title>原来状态机也可以用来刷 LeetCode？</title>
    <link href="https://lucifer.ren/blog/2020/01/12/1262.greatest-sum-divisible-by-three/"/>
    <id>https://lucifer.ren/blog/2020/01/12/1262.greatest-sum-divisible-by-three/</id>
    <published>2020-01-12T09:02:00.924Z</published>
    <updated>2020-01-12T09:06:56.830Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;什么？ 状态机还可以用来刷 LeetCode？ 如果你还不知道，那么就快进来看看吧！&lt;/p&gt;
    
    </summary>
    
      <category term="数据结构" scheme="https://lucifer.ren/blog/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="算法" scheme="https://lucifer.ren/blog/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="数据结构" scheme="https://lucifer.ren/blog/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="算法" scheme="https://lucifer.ren/blog/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="动态规划" scheme="https://lucifer.ren/blog/tags/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    
      <category term="状态机" scheme="https://lucifer.ren/blog/tags/%E7%8A%B6%E6%80%81%E6%9C%BA/"/>
    
      <category term="贪心" scheme="https://lucifer.ren/blog/tags/%E8%B4%AA%E5%BF%83/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode一道令人发指的陷阱题</title>
    <link href="https://lucifer.ren/blog/2020/01/10/1297.maximum-number-of-occurrences-of-a-substring/"/>
    <id>https://lucifer.ren/blog/2020/01/10/1297.maximum-number-of-occurrences-of-a-substring/</id>
    <published>2020-01-10T04:34:25.412Z</published>
    <updated>2020-01-10T04:36:32.041Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;LeetCode 有一些题目会给你设置陷阱，给你一些干扰信息。这个时候你需要小心，不要被他们带跑偏了。那么是什么样的陷阱呢？让我们来看一下！&lt;/p&gt;
    
    </summary>
    
      <category term="数据结构" scheme="https://lucifer.ren/blog/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="算法" scheme="https://lucifer.ren/blog/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="数据结构" scheme="https://lucifer.ren/blog/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="算法" scheme="https://lucifer.ren/blog/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="陷阱题" scheme="https://lucifer.ren/blog/tags/%E9%99%B7%E9%98%B1%E9%A2%98/"/>
    
      <category term="滑动窗口" scheme="https://lucifer.ren/blog/tags/%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3/"/>
    
  </entry>
  
  <entry>
    <title>掌握前缀表达式真的可以为所欲为！</title>
    <link href="https://lucifer.ren/blog/2020/01/09/1310.xor-queries-of-a-subarray/"/>
    <id>https://lucifer.ren/blog/2020/01/09/1310.xor-queries-of-a-subarray/</id>
    <published>2020-01-09T12:51:02.477Z</published>
    <updated>2020-01-09T12:54:20.701Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;前缀表达式是一种非常常见和重要的知识点，如果你还不知道，那就赶紧点进来看看吧！&lt;/p&gt;
    
    </summary>
    
      <category term="数据结构" scheme="https://lucifer.ren/blog/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="算法" scheme="https://lucifer.ren/blog/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="数据结构" scheme="https://lucifer.ren/blog/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="算法" scheme="https://lucifer.ren/blog/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="前缀和" scheme="https://lucifer.ren/blog/tags/%E5%89%8D%E7%BC%80%E5%92%8C/"/>
    
      <category term="前缀表达式" scheme="https://lucifer.ren/blog/tags/%E5%89%8D%E7%BC%80%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>数据结构快速盘点</title>
    <link href="https://lucifer.ren/blog/2020/01/03/basic-data-structure/"/>
    <id>https://lucifer.ren/blog/2020/01/03/basic-data-structure/</id>
    <published>2020-01-02T16:00:00.000Z</published>
    <updated>2020-01-14T01:56:11.121Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;这篇文章不是讲解数据结构的文章，而是结合现实的场景帮助大家&lt;code&gt;理解和复习&lt;/code&gt;数据结构与算法，&lt;br&gt;如果你的数据结构基础很差，建议先去看一些基础教程，再转过来看。&lt;/p&gt;
&lt;p&gt;本篇文章的定位是侧重于前端的，通过学习前端中实际场景的数据结构，从而加深大家对数据结构的理解和认识。&lt;/p&gt;
    
    </summary>
    
      <category term="数据结构" scheme="https://lucifer.ren/blog/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    
      <category term="数据结构" scheme="https://lucifer.ren/blog/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>每日一荐 2019-12 汇总</title>
    <link href="https://lucifer.ren/blog/2020/01/01/daily-featured-2019-12/"/>
    <id>https://lucifer.ren/blog/2020/01/01/daily-featured-2019-12/</id>
    <published>2020-01-01T12:33:17.345Z</published>
    <updated>2020-01-01T12:33:53.858Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://tva1.sinaimg.cn/large/006y8mN6ly1g8d0sktqrwj30hs07maae.jpg&quot; alt&gt;&lt;/p&gt;
&lt;p&gt;每天给你推荐一个新奇，好玩，高品质的开源库，好文，观点或言论等。&lt;/p&gt;
&lt;p&gt;项目主页维护当前月份的内容，想看往期内容，可以去&lt;a href=&quot;https://github.com/azl397985856/daily-featured&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;每日一荐主仓库&lt;/a&gt;翻到下方历史汇总部分，然后选择自己感兴趣的月份点进去即可。&lt;/p&gt;
    
    </summary>
    
      <category term="每日一荐" scheme="https://lucifer.ren/blog/categories/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%8D%90/"/>
    
      <category term="2019-12" scheme="https://lucifer.ren/blog/categories/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%8D%90/2019-12/"/>
    
    
      <category term="每日一荐" scheme="https://lucifer.ren/blog/tags/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%8D%90/"/>
    
  </entry>
  
  <entry>
    <title>致作者</title>
    <link href="https://lucifer.ren/blog/2019/12/11/to-author/"/>
    <id>https://lucifer.ren/blog/2019/12/11/to-author/</id>
    <published>2019-12-11T04:35:19.047Z</published>
    <updated>2019-12-11T04:35:19.047Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;写给我敬爱的作者们，关于“云写书”的初衷，愿景，规划以及具体细节。&lt;/p&gt;
    
    </summary>
    
      <category term="LeetCode" scheme="https://lucifer.ren/blog/categories/LeetCode/"/>
    
      <category term="LeetCode题解书" scheme="https://lucifer.ren/blog/categories/LeetCode/LeetCode%E9%A2%98%E8%A7%A3%E4%B9%A6/"/>
    
    
      <category term="LeetCode" scheme="https://lucifer.ren/blog/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>使用web-component搭建企业级组件库</title>
    <link href="https://lucifer.ren/blog/2019/12/11/web-components-enterprize/"/>
    <id>https://lucifer.ren/blog/2019/12/11/web-components-enterprize/</id>
    <published>2019-12-11T04:35:19.047Z</published>
    <updated>2019-12-11T04:35:19.047Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;前端目前比较主流的框架有react，vuejs，angular等。 我们通常去搭建组件库的时候都是基于某一种框架去搭建，比如ant-design是基于react搭建的UI组件库，而elementUI则是基于vuejs搭建的组件库。&lt;/p&gt;
&lt;p&gt;虽然目前社区有相关工具，提供框架之间的转化服务，比如讲vuejs组件转化为react组件。但是毕竟是不同的框架，有不同的标准。因此框架api发生变动，那么你就需要重写转化逻辑，显然是不灵活的，因此我们暂不讨论这种情况。作为公司而言，就需要为不同的框架写不同的组件库，尽管逻辑都是一样的。&lt;/p&gt;
&lt;p&gt;另外如果框架升级，比如从1.x升级到2.x，那么对应组件库就需要升级，如果公司的组件库有很多（vuejs，react，angular等），那么这种升级的概率就会更大。&lt;/p&gt;
    
    </summary>
    
      <category term="前端" scheme="https://lucifer.ren/blog/categories/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="组件化" scheme="https://lucifer.ren/blog/categories/%E5%89%8D%E7%AB%AF/%E7%BB%84%E4%BB%B6%E5%8C%96/"/>
    
      <category term="web-component" scheme="https://lucifer.ren/blog/categories/%E5%89%8D%E7%AB%AF/web-component/"/>
    
    
      <category term="前端" scheme="https://lucifer.ren/blog/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="组件化" scheme="https://lucifer.ren/blog/tags/%E7%BB%84%E4%BB%B6%E5%8C%96/"/>
    
      <category term="web-component" scheme="https://lucifer.ren/blog/tags/web-component/"/>
    
  </entry>
  
  <entry>
    <title>累死累活干不过一个写PPT的</title>
    <link href="https://lucifer.ren/blog/2019/12/11/ppt-data/"/>
    <id>https://lucifer.ren/blog/2019/12/11/ppt-data/</id>
    <published>2019-12-11T04:35:19.046Z</published>
    <updated>2019-12-11T04:35:19.046Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;无论是身处什么行业什么领域，数据分析越来越成为一向必不可少的技能，&lt;br&gt;而运用数据思维进行决策更能产生形成高质量的决策结果。&lt;/p&gt;
&lt;p&gt;随着互联网的不断发展和物联网设备的不断普及，我们日常生活中的各种数据被存储下来，让我们可以通过定量分析数据，利用数据实现更好的决策制定。&lt;/p&gt;
    
    </summary>
    
    
      <category term="技能" scheme="https://lucifer.ren/blog/tags/%E6%8A%80%E8%83%BD/"/>
    
      <category term="PPT" scheme="https://lucifer.ren/blog/tags/PPT/"/>
    
  </entry>
  
  <entry>
    <title>一文搞懂《链表反转》</title>
    <link href="https://lucifer.ren/blog/2019/12/11/reverseList/"/>
    <id>https://lucifer.ren/blog/2019/12/11/reverseList/</id>
    <published>2019-12-11T04:35:19.046Z</published>
    <updated>2019-12-11T04:35:19.046Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;翻转链表一直都是热门题目，笔者就在某大型互联网公司的面试题中碰到过这种题目，这种题目很常常见，相对应的变形和扩展也很多，今天我们就来攻克它吧。&lt;/p&gt;
    
    </summary>
    
      <category term="算法" scheme="https://lucifer.ren/blog/categories/%E7%AE%97%E6%B3%95/"/>
    
      <category term="数据结构" scheme="https://lucifer.ren/blog/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="LeetCode" scheme="https://lucifer.ren/blog/categories/LeetCode/"/>
    
      <category term="链表反转" scheme="https://lucifer.ren/blog/categories/%E7%AE%97%E6%B3%95/%E9%93%BE%E8%A1%A8%E5%8F%8D%E8%BD%AC/"/>
    
      <category term="链表" scheme="https://lucifer.ren/blog/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E9%93%BE%E8%A1%A8/"/>
    
    
      <category term="数据结构" scheme="https://lucifer.ren/blog/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="算法" scheme="https://lucifer.ren/blog/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="LeetCode" scheme="https://lucifer.ren/blog/tags/LeetCode/"/>
    
      <category term="字节跳动" scheme="https://lucifer.ren/blog/tags/%E5%AD%97%E8%8A%82%E8%B7%B3%E5%8A%A8/"/>
    
      <category term="链表" scheme="https://lucifer.ren/blog/tags/%E9%93%BE%E8%A1%A8/"/>
    
  </entry>
  
  <entry>
    <title>【RFC】XXX 公司监控体系需求与技术调研</title>
    <link href="https://lucifer.ren/blog/2019/12/11/rfc-monitor/"/>
    <id>https://lucifer.ren/blog/2019/12/11/rfc-monitor/</id>
    <published>2019-12-11T04:35:19.046Z</published>
    <updated>2020-01-10T05:21:06.180Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;线上问题回溯困难，无法快速准确重现问题，导致客户满意度下降，影响团队交付效率和质量，建立完善的监控体系可以很好的解决这个问题。&lt;/p&gt;
    
    </summary>
    
    
      <category term="RFC" scheme="https://lucifer.ren/blog/tags/RFC/"/>
    
      <category term="技术调研" scheme="https://lucifer.ren/blog/tags/%E6%8A%80%E6%9C%AF%E8%B0%83%E7%A0%94/"/>
    
      <category term="监控" scheme="https://lucifer.ren/blog/tags/%E7%9B%91%E6%8E%A7/"/>
    
  </entry>
  
  <entry>
    <title>文科生都能看懂的循环移位算法</title>
    <link href="https://lucifer.ren/blog/2019/12/11/rotate-list/"/>
    <id>https://lucifer.ren/blog/2019/12/11/rotate-list/</id>
    <published>2019-12-11T04:35:19.046Z</published>
    <updated>2019-12-21T11:32:55.151Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;循环移位问题真的是一个特别经典的问题了，今天我们就来攻克它。&lt;/p&gt;
&lt;p&gt;循环移位的表现形式有很多种，就数据结构来说包括&lt;code&gt;数组&lt;/code&gt;，&lt;code&gt;字符串&lt;/code&gt;，&lt;code&gt;链表&lt;/code&gt;等。就算法来说，有&lt;code&gt;包含问题&lt;/code&gt;，&lt;code&gt;直接移动问题&lt;/code&gt;，还有&lt;code&gt;查找问题&lt;/code&gt;等。&lt;/p&gt;
&lt;p&gt;虽然表现形式有很多，但是本质都是一样的，因为从逻辑上来讲其实他们都是线性数据结构，那么让我们来看一下吧。&lt;/p&gt;
    
    </summary>
    
      <category term="算法" scheme="https://lucifer.ren/blog/categories/%E7%AE%97%E6%B3%95/"/>
    
      <category term="数据结构" scheme="https://lucifer.ren/blog/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="字符串" scheme="https://lucifer.ren/blog/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    
      <category term="LeetCode" scheme="https://lucifer.ren/blog/categories/LeetCode/"/>
    
      <category term="数组" scheme="https://lucifer.ren/blog/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%95%B0%E7%BB%84/"/>
    
      <category term="循环移位" scheme="https://lucifer.ren/blog/categories/%E7%AE%97%E6%B3%95/%E5%BE%AA%E7%8E%AF%E7%A7%BB%E4%BD%8D/"/>
    
      <category term="链表" scheme="https://lucifer.ren/blog/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E9%93%BE%E8%A1%A8/"/>
    
      <category term="编程之美" scheme="https://lucifer.ren/blog/categories/%E7%BC%96%E7%A8%8B%E4%B9%8B%E7%BE%8E/"/>
    
    
      <category term="数据结构" scheme="https://lucifer.ren/blog/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="算法" scheme="https://lucifer.ren/blog/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="数组" scheme="https://lucifer.ren/blog/tags/%E6%95%B0%E7%BB%84/"/>
    
      <category term="链表" scheme="https://lucifer.ren/blog/tags/%E9%93%BE%E8%A1%A8/"/>
    
      <category term="循环移位" scheme="https://lucifer.ren/blog/tags/%E5%BE%AA%E7%8E%AF%E7%A7%BB%E4%BD%8D/"/>
    
      <category term="字符串" scheme="https://lucifer.ren/blog/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    
      <category term="编程之美" scheme="https://lucifer.ren/blog/tags/%E7%BC%96%E7%A8%8B%E4%B9%8B%E7%BE%8E/"/>
    
  </entry>
  
  <entry>
    <title>值得关注的技术类大会</title>
    <link href="https://lucifer.ren/blog/2019/12/11/tech-conf/"/>
    <id>https://lucifer.ren/blog/2019/12/11/tech-conf/</id>
    <published>2019-12-11T04:35:19.046Z</published>
    <updated>2019-12-11T04:35:19.046Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;作为一个技术人，怎么能不参加和关注几场技术大会呢？让我们来看下那些你不能错过的技术大会吧。&lt;/p&gt;
    
    </summary>
    
      <category term="技术大会" scheme="https://lucifer.ren/blog/categories/%E6%8A%80%E6%9C%AF%E5%A4%A7%E4%BC%9A/"/>
    
      <category term="JSConf" scheme="https://lucifer.ren/blog/categories/%E6%8A%80%E6%9C%AF%E5%A4%A7%E4%BC%9A/JSConf/"/>
    
      <category term="React Conf" scheme="https://lucifer.ren/blog/categories/%E6%8A%80%E6%9C%AF%E5%A4%A7%E4%BC%9A/React-Conf/"/>
    
      <category term="Google IO" scheme="https://lucifer.ren/blog/categories/%E6%8A%80%E6%9C%AF%E5%A4%A7%E4%BC%9A/Google-IO/"/>
    
      <category term="D2" scheme="https://lucifer.ren/blog/categories/%E6%8A%80%E6%9C%AF%E5%A4%A7%E4%BC%9A/D2/"/>
    
      <category term="QCon" scheme="https://lucifer.ren/blog/categories/%E6%8A%80%E6%9C%AF%E5%A4%A7%E4%BC%9A/QCon/"/>
    
    
      <category term="技术大会" scheme="https://lucifer.ren/blog/tags/%E6%8A%80%E6%9C%AF%E5%A4%A7%E4%BC%9A/"/>
    
      <category term="JSConf" scheme="https://lucifer.ren/blog/tags/JSConf/"/>
    
      <category term="Google IO" scheme="https://lucifer.ren/blog/tags/Google-IO/"/>
    
      <category term="D2" scheme="https://lucifer.ren/blog/tags/D2/"/>
    
      <category term="QCon" scheme="https://lucifer.ren/blog/tags/QCon/"/>
    
  </entry>
  
</feed>
