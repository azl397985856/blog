<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>lucifer的网络博客</title>
  
  <subtitle>LeetCode 前端</subtitle>
  <link href="/blog/atom.xml" rel="self"/>
  
  <link href="https://lucifer.ren/blog/"/>
  <updated>2021-11-09T11:34:05.447Z</updated>
  <id>https://lucifer.ren/blog/</id>
  
  <author>
    <name>lucifer</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>面试中图论都考什么？这篇文章告诉你！</title>
    <link href="https://lucifer.ren/blog/2021/11/09/grapth/"/>
    <id>https://lucifer.ren/blog/2021/11/09/grapth/</id>
    <published>2021-11-08T16:00:00.000Z</published>
    <updated>2021-11-09T11:34:05.447Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;图论〔Graph Theory〕是数学的一个分支。它以图为研究对象。图论中的图是由若干给定的点及连接两点的线所构成的图形，这种图形通常用来描述某些事物之间的某种特定关系，用点代表事物，用连接两点的线表示相应两个事物间具有这种关系。&lt;/p&gt;
&lt;p&gt; 如下就是一种逻辑上的图结构：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://tva1.sinaimg.cn/large/008i3skNly1guanati4zlj61800u075p02.jpg&quot; alt=&quot;逻辑上的图结构&quot;&gt;&lt;/p&gt;
&lt;p&gt;图是一种最复杂的数据结构，前面讲的数据结构都可以看成是图的特例。那为什么不都用图就好了，还要分那么多种数据结构呢？&lt;/p&gt;
&lt;p&gt;这是因为很多时候不需要用到那么复杂的功能，图的很多特性都不具备，如果笼统地都称为图那么非常不利于沟通。你想你和别人沟通总不至于说这道题是考察一种特殊的图，这种图。。。。 这未免太啰嗦了，因此给其他图的特殊的图起了特殊的名字，这样就方便沟通了。直到遇到了非常复杂的情况，我们才会用到 &lt;strong&gt;”真正“的图&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;前面章节提到了&lt;strong&gt;数据结构就是为了算法服务的，数据结构就是存储数据用的，目的是为了更高效。&lt;/strong&gt; 那么什么时候需要用图来存储数据，在这种情况图高效在哪里呢？答案很简单，那就是如果你用其他简单的数据结构无法很好地进行存储，就应该使用图了。 比如我们需要存储一种双向的朋友关系，并且这种朋友关系是多对多的，那就一定要用到图，因为其他数据结构无法模拟。&lt;/p&gt;
    
    </summary>
    
      <category term="图" scheme="https://lucifer.ren/blog/categories/%E5%9B%BE/"/>
    
    
      <category term="图" scheme="https://lucifer.ren/blog/tags/%E5%9B%BE/"/>
    
      <category term="LeetCode" scheme="https://lucifer.ren/blog/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>《算法通关之路》邀请你来试读</title>
    <link href="https://lucifer.ren/blog/2021/10/24/new-book/"/>
    <id>https://lucifer.ren/blog/2021/10/24/new-book/</id>
    <published>2021-10-23T16:00:00.000Z</published>
    <updated>2021-11-03T15:31:21.567Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;新书出版已经有一段时间了，也陆续收到了一些读者的反馈。今天咱就回答一些读者常见的问题以及《算法通关之路》一些内容剧透。&lt;/p&gt;
&lt;p&gt;其实出版后已经有不少读者看完了并且给了非常优质的读后感。下面我挑选几个章节的优质留言给大家。&lt;/p&gt;
    
    </summary>
    
      <category term="《算法通关之路》" scheme="https://lucifer.ren/blog/categories/%E3%80%8A%E7%AE%97%E6%B3%95%E9%80%9A%E5%85%B3%E4%B9%8B%E8%B7%AF%E3%80%8B/"/>
    
    
      <category term="《算法通关之路》" scheme="https://lucifer.ren/blog/tags/%E3%80%8A%E7%AE%97%E6%B3%95%E9%80%9A%E5%85%B3%E4%B9%8B%E8%B7%AF%E3%80%8B/"/>
    
  </entry>
  
  <entry>
    <title>聊聊刷题中的**顿悟**时刻</title>
    <link href="https://lucifer.ren/blog/2021/10/16/algo-fakers/"/>
    <id>https://lucifer.ren/blog/2021/10/16/algo-fakers/</id>
    <published>2021-10-15T16:00:00.000Z</published>
    <updated>2021-10-16T06:39:38.453Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;和几位一直坚持刷题好朋友讨论了一下刷题的&lt;strong&gt;顿悟&lt;/strong&gt;时刻，他们几位大都取得了不错的 offer，比如 Google 微软，Amazon，BAT 等。&lt;/p&gt;
&lt;p&gt;通过和他们的沟通，我发现了大家&lt;strong&gt;顿悟&lt;/strong&gt;时刻都是类似的。那具体他们有哪些相似点呢？我们一起来看下。&lt;/p&gt;
    
    </summary>
    
      <category term="刷题技巧" scheme="https://lucifer.ren/blog/categories/%E5%88%B7%E9%A2%98%E6%8A%80%E5%B7%A7/"/>
    
    
      <category term="刷题技巧" scheme="https://lucifer.ren/blog/tags/%E5%88%B7%E9%A2%98%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>用什么语言刷题最有排面？</title>
    <link href="https://lucifer.ren/blog/2021/10/10/programming-idioms/"/>
    <id>https://lucifer.ren/blog/2021/10/10/programming-idioms/</id>
    <published>2021-10-09T16:00:00.000Z</published>
    <updated>2021-10-11T15:12:04.207Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;很多读者向西法反应：“能不能在专题和题解里面增加 xx 语言”。&lt;/p&gt;
&lt;p&gt;我的回答一直都是：&lt;strong&gt;我会尽量添加多种编程语言，但也请你不要依赖于某种具体的编程语言来学算法&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;熟悉我的朋友都知道，我刚开始的时候，我使用 JS 比较多，之后使用 Python 比较多，现在也在陆续更新题解的 C++ 语言，之后会考虑其他的语言。接下来的话应该是优先考虑 Java，让大家学习曲线更平滑。&lt;/p&gt;
&lt;p&gt;但是另一方面我也强烈建议大家不要依赖于某一种具体地编程语言。我当然知道学习和切换编程语言需要时间，也体会到使用自己熟悉的编程语言效率更高。&lt;/p&gt;
    
    </summary>
    
    
      <category term="刷题技巧" scheme="https://lucifer.ren/blog/tags/%E5%88%B7%E9%A2%98%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>写注释就能自动出代码？copilot 尝鲜</title>
    <link href="https://lucifer.ren/blog/2021/10/05/copilot/"/>
    <id>https://lucifer.ren/blog/2021/10/05/copilot/</id>
    <published>2021-10-04T16:00:00.000Z</published>
    <updated>2021-10-07T12:19:51.703Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;copilot 是一个基于 AI 的编程辅助工具。目前已经集成在了 vscode 中，后续可能集成到更多平台和工具，目前还是测试阶段。官网地址：&lt;a href=&quot;https://copilot.github.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://copilot.github.com/&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="工具" scheme="https://lucifer.ren/blog/categories/%E5%B7%A5%E5%85%B7/"/>
    
      <category term="VSCODE" scheme="https://lucifer.ren/blog/categories/%E5%B7%A5%E5%85%B7/VSCODE/"/>
    
    
      <category term="AI" scheme="https://lucifer.ren/blog/tags/AI/"/>
    
      <category term="VSCODE" scheme="https://lucifer.ren/blog/tags/VSCODE/"/>
    
  </entry>
  
  <entry>
    <title>有了这个可视化插件，刷题调试更轻松</title>
    <link href="https://lucifer.ren/blog/2021/09/26/algo-vis/"/>
    <id>https://lucifer.ren/blog/2021/09/26/algo-vis/</id>
    <published>2021-09-25T16:00:00.000Z</published>
    <updated>2021-09-26T14:31:58.806Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;如何有效学习算法&quot;&gt;&lt;a href=&quot;#如何有效学习算法&quot; class=&quot;headerlink&quot; title=&quot;如何有效学习算法&quot;&gt;&lt;/a&gt;如何有效学习算法&lt;/h2&gt;&lt;p&gt;学习算法的基本思路就是：&lt;strong&gt;先学习算法思想，然后通过做题消化思想，并在做题过程中慢慢学习，掌握一些小技巧&lt;/strong&gt;。这其中算法思想就是&lt;strong&gt;道&lt;/strong&gt;，而经典题目以及做题技巧就是&lt;strong&gt;术&lt;/strong&gt;。做题是通过术来完善道。&lt;/p&gt;
&lt;p&gt;但是很多人都反应&lt;strong&gt;看讲义和做题之间断层严重&lt;/strong&gt;，也就是一看就会，一些就废。这怎么办呢？&lt;/p&gt;
    
    </summary>
    
      <category term="插件" scheme="https://lucifer.ren/blog/categories/%E6%8F%92%E4%BB%B6/"/>
    
      <category term="算法" scheme="https://lucifer.ren/blog/categories/%E6%8F%92%E4%BB%B6/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="数据结构" scheme="https://lucifer.ren/blog/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="算法" scheme="https://lucifer.ren/blog/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="插件" scheme="https://lucifer.ren/blog/tags/%E6%8F%92%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>五天100+题，怒进谷歌！</title>
    <link href="https://lucifer.ren/blog/2021/09/24/91algo-interview-kongshi/"/>
    <id>https://lucifer.ren/blog/2021/09/24/91algo-interview-kongshi/</id>
    <published>2021-09-23T16:00:00.000Z</published>
    <updated>2021-09-23T17:39:01.108Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h2&gt;&lt;p&gt;空识拿到了&lt;strong&gt;Google 的 offer&lt;/strong&gt;，和狗头做起了同事。&lt;/p&gt;
&lt;p&gt;他一个礼拜刷了 100 多道题，然后面试 Google 终于通过了。这个经历还是蛮具有代表性的，分享给正在准备面试的你。&lt;/p&gt;
&lt;p&gt;​
    
    </summary>
    
      <category term="力扣加加" scheme="https://lucifer.ren/blog/categories/%E5%8A%9B%E6%89%A3%E5%8A%A0%E5%8A%A0/"/>
    
      <category term="91天学算法" scheme="https://lucifer.ren/blog/categories/91%E5%A4%A9%E5%AD%A6%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="数据结构" scheme="https://lucifer.ren/blog/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="算法" scheme="https://lucifer.ren/blog/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="算法提高班" scheme="https://lucifer.ren/blog/tags/%E7%AE%97%E6%B3%95%E6%8F%90%E9%AB%98%E7%8F%AD/"/>
    
      <category term="91天学算法" scheme="https://lucifer.ren/blog/tags/91%E5%A4%A9%E5%AD%A6%E7%AE%97%E6%B3%95/"/>
    
      <category term="力扣加加" scheme="https://lucifer.ren/blog/tags/%E5%8A%9B%E6%89%A3%E5%8A%A0%E5%8A%A0/"/>
    
  </entry>
  
  <entry>
    <title>力扣刷题的正确姿势是什么？</title>
    <link href="https://lucifer.ren/blog/2021/09/16/how-leetcode/"/>
    <id>https://lucifer.ren/blog/2021/09/16/how-leetcode/</id>
    <published>2021-09-15T16:00:00.000Z</published>
    <updated>2021-09-16T04:25:58.550Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;本文原本是打算加到我的新书《算法通关之路》的附录部分。不过由于力扣官方不过审，因此只好作罢。将这部分内容发到这里给大家参考。&lt;/p&gt;
&lt;p&gt;《算法通关之路》介绍以及购买可访问：&lt;a href=&quot;https://leetcode-solution.cn/book-intro&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://leetcode-solution.cn/book-intro&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="LeetCode" scheme="https://lucifer.ren/blog/categories/LeetCode/"/>
    
      <category term="刷题技巧" scheme="https://lucifer.ren/blog/categories/%E5%88%B7%E9%A2%98%E6%8A%80%E5%B7%A7/"/>
    
    
      <category term="LeetCode" scheme="https://lucifer.ren/blog/tags/LeetCode/"/>
    
      <category term="刷题技巧" scheme="https://lucifer.ren/blog/tags/%E5%88%B7%E9%A2%98%E6%8A%80%E5%B7%A7/"/>
    
      <category term="工具" scheme="https://lucifer.ren/blog/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>《算法通关之路》出版啦！</title>
    <link href="https://lucifer.ren/blog/2021/09/04/leetcode-solution-book/"/>
    <id>https://lucifer.ren/blog/2021/09/04/leetcode-solution-book/</id>
    <published>2021-09-03T16:00:00.000Z</published>
    <updated>2021-09-03T06:12:32.768Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;其实很多朋友私底下问我：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;新书什么时候出版？&lt;/li&gt;
&lt;li&gt;可以预定么？&lt;/li&gt;
&lt;li&gt;等等&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;其实我比大家更着急，只不过出版图书真的是一个非常严谨的过程。不比专栏，小册等电子读物可以一边上架一边修改。传统的纸质图书的要求和流程都是严格把控的。因此只能耐心等待和配合出版社。 而现在《算法通关之路》终于要和大家见面了！🌹🌹🌹&lt;/p&gt;
    
    </summary>
    
      <category term="力扣加加" scheme="https://lucifer.ren/blog/categories/%E5%8A%9B%E6%89%A3%E5%8A%A0%E5%8A%A0/"/>
    
      <category term="书" scheme="https://lucifer.ren/blog/categories/%E4%B9%A6/"/>
    
    
      <category term="数据结构" scheme="https://lucifer.ren/blog/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="算法" scheme="https://lucifer.ren/blog/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="力扣加加" scheme="https://lucifer.ren/blog/tags/%E5%8A%9B%E6%89%A3%E5%8A%A0%E5%8A%A0/"/>
    
      <category term="书" scheme="https://lucifer.ren/blog/tags/%E4%B9%A6/"/>
    
  </entry>
  
  <entry>
    <title>入职一个月，远程办公感受如何？</title>
    <link href="https://lucifer.ren/blog/2021/09/04/wfh/"/>
    <id>https://lucifer.ren/blog/2021/09/04/wfh/</id>
    <published>2021-09-03T16:00:00.000Z</published>
    <updated>2021-09-04T08:25:59.793Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;上一次给大家讲了我现在已经全职远程办公（简称 wfh），算起来有超过一个月的时间了。很多同学对此比较感兴趣，我们就来聊聊我最近工作如何。&lt;/p&gt;
    
    </summary>
    
      <category term="成长经历" scheme="https://lucifer.ren/blog/categories/%E6%88%90%E9%95%BF%E7%BB%8F%E5%8E%86/"/>
    
    
      <category term="成长经历" scheme="https://lucifer.ren/blog/tags/%E6%88%90%E9%95%BF%E7%BB%8F%E5%8E%86/"/>
    
  </entry>
  
  <entry>
    <title>github 又出新功能，布局云端 vscode？</title>
    <link href="https://lucifer.ren/blog/2021/09/02/vscode-dev-codespaces/"/>
    <id>https://lucifer.ren/blog/2021/09/02/vscode-dev-codespaces/</id>
    <published>2021-09-01T16:00:00.000Z</published>
    <updated>2021-09-05T10:06:14.260Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;vscode 和 github 是微软的两大开源产品，二者在业界的影响力都是巨大的。&lt;/p&gt;
&lt;p&gt;近日 Github 新出了一个功能，用户可以通过将 url 中的 &lt;strong&gt;.com 替换为 .dev&lt;/strong&gt; 来直接打开在线版的 vscode 编辑器。&lt;/p&gt;
    
    </summary>
    
      <category term="工具" scheme="https://lucifer.ren/blog/categories/%E5%B7%A5%E5%85%B7/"/>
    
      <category term="VSCODE" scheme="https://lucifer.ren/blog/categories/%E5%B7%A5%E5%85%B7/VSCODE/"/>
    
    
      <category term="VSCODE" scheme="https://lucifer.ren/blog/tags/VSCODE/"/>
    
      <category term="工具" scheme="https://lucifer.ren/blog/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>如何搞定不同公司的算法面试？（早早聊分享文字版）</title>
    <link href="https://lucifer.ren/blog/2021/09/02/zaozaoliao/"/>
    <id>https://lucifer.ren/blog/2021/09/02/zaozaoliao/</id>
    <published>2021-09-01T16:00:00.000Z</published>
    <updated>2021-09-02T07:09:31.122Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;前几天西法参加了《前端早早聊》第 24 界的分享。我的分享主题是《如何搞定不同公司的算法面试？》 这是这次分享的文字版，供大家查看。如果大家需要分享的原版 ppt，也可以到我的公众号《脑洞前端》中回复&lt;strong&gt;早早聊&lt;/strong&gt;获取。&lt;/p&gt;
    
    </summary>
    
      <category term="算法" scheme="https://lucifer.ren/blog/categories/%E7%AE%97%E6%B3%95/"/>
    
      <category term="前端" scheme="https://lucifer.ren/blog/categories/%E7%AE%97%E6%B3%95/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="面试" scheme="https://lucifer.ren/blog/categories/%E7%AE%97%E6%B3%95/%E5%89%8D%E7%AB%AF/%E9%9D%A2%E8%AF%95/"/>
    
    
      <category term="插件" scheme="https://lucifer.ren/blog/tags/%E6%8F%92%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>回炉重铸， 91 天见证不一样的自己（第五期）</title>
    <link href="https://lucifer.ren/blog/2021/08/21/91algo-5/"/>
    <id>https://lucifer.ren/blog/2021/08/21/91algo-5/</id>
    <published>2021-08-20T16:00:00.000Z</published>
    <updated>2021-09-02T10:15:04.400Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;力扣加加，一个努力做西湖区最好的算法题解的团队。就在今天它给大家带来了《91 天学算法》，帮助大家摆脱困境，征服算法。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://tva1.sinaimg.cn/large/007S8ZIlly1gf2atkdikgj30u70u0tct.jpg&quot; width=&quot;50%&quot;&gt;&lt;/p&gt;
&lt;p&gt;第五期本来想和力扣官方合作一起搞，这样打卡就可以无缝衔接，如果你有力扣会员甚至可以免费参加。可是力扣官方给的感觉是：&lt;code&gt;快了，已经在新建文件夹了&lt;/code&gt;。 就好像我虽然还是 &lt;code&gt;行号 0， 列号 0，字数 0&lt;/code&gt;，但是却和催更的读者说&lt;code&gt;快写好了&lt;/code&gt;一样。&lt;/p&gt;
&lt;p&gt;因此第五期我们就先开始吧！&lt;/p&gt;
&lt;p&gt;​
    
    </summary>
    
      <category term="力扣加加" scheme="https://lucifer.ren/blog/categories/%E5%8A%9B%E6%89%A3%E5%8A%A0%E5%8A%A0/"/>
    
      <category term="91天学算法" scheme="https://lucifer.ren/blog/categories/91%E5%A4%A9%E5%AD%A6%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="数据结构" scheme="https://lucifer.ren/blog/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="算法" scheme="https://lucifer.ren/blog/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="算法提高班" scheme="https://lucifer.ren/blog/tags/%E7%AE%97%E6%B3%95%E6%8F%90%E9%AB%98%E7%8F%AD/"/>
    
      <category term="91天学算法" scheme="https://lucifer.ren/blog/tags/91%E5%A4%A9%E5%AD%A6%E7%AE%97%E6%B3%95/"/>
    
      <category term="力扣加加" scheme="https://lucifer.ren/blog/tags/%E5%8A%9B%E6%89%A3%E5%8A%A0%E5%8A%A0/"/>
    
  </entry>
  
  <entry>
    <title>你不知道的 LeetCode 技巧（第二篇）</title>
    <link href="https://lucifer.ren/blog/2021/08/17/ydk-leetcode-2/"/>
    <id>https://lucifer.ren/blog/2021/08/17/ydk-leetcode-2/</id>
    <published>2021-08-16T16:00:00.000Z</published>
    <updated>2021-08-20T15:28:11.952Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;上一篇 &lt;a href=&quot;https://lucifer.ren/blog/2022/08/06/ydk-leetcode/&quot;&gt;你不知道的 LeetCode 技巧（第一篇）&lt;/a&gt; 讲述了三个 JS 刷题的小技巧。今天来分享几个 leetcode 通用小技巧，不管你是用什么语言刷题都可以使用。&lt;/p&gt;
    
    </summary>
    
      <category term="刷题技巧" scheme="https://lucifer.ren/blog/categories/%E5%88%B7%E9%A2%98%E6%8A%80%E5%B7%A7/"/>
    
    
      <category term="LeetCode" scheme="https://lucifer.ren/blog/tags/LeetCode/"/>
    
      <category term="刷题技巧" scheme="https://lucifer.ren/blog/tags/%E5%88%B7%E9%A2%98%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>你不知道的 LeetCode 技巧（第一篇）</title>
    <link href="https://lucifer.ren/blog/2021/08/06/ydk-leetcode/"/>
    <id>https://lucifer.ren/blog/2021/08/06/ydk-leetcode/</id>
    <published>2021-08-05T16:00:00.000Z</published>
    <updated>2021-08-09T15:36:57.330Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;今天来给使用 &lt;strong&gt;JS 刷题&lt;/strong&gt;的朋友分享&lt;strong&gt;三个&lt;/strong&gt; LeetCode 上你或许不知道的刷题技巧。&lt;/p&gt;
    
    </summary>
    
      <category term="LeetCode" scheme="https://lucifer.ren/blog/categories/LeetCode/"/>
    
      <category term="刷题技巧" scheme="https://lucifer.ren/blog/categories/LeetCode/%E5%88%B7%E9%A2%98%E6%8A%80%E5%B7%A7/"/>
    
    
      <category term="LeetCode" scheme="https://lucifer.ren/blog/tags/LeetCode/"/>
    
      <category term="刷题技巧" scheme="https://lucifer.ren/blog/tags/%E5%88%B7%E9%A2%98%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>从零到谷歌程序员：「狗头」的面试刷题心得</title>
    <link href="https://lucifer.ren/blog/2021/07/29/91algo-interview-yixiao/"/>
    <id>https://lucifer.ren/blog/2021/07/29/91algo-interview-yixiao/</id>
    <published>2021-07-28T16:00:00.000Z</published>
    <updated>2021-07-29T06:29:10.924Z</updated>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;本文作者：易潇&lt;/li&gt;
&lt;li&gt;她的 Github：&lt;a href=&quot;https://github.com/lilyzhaoyilu&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/lilyzhaoyilu&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;大家好，我是易潇，也是 91 算法群里大家熟悉的狗头。最近申请和面试基本结束，刚刚过了&lt;strong&gt;Google 的 HC&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;我的本科读的是商学，所以算是&lt;code&gt;文科转码&lt;/code&gt;和&lt;code&gt;0基础转码&lt;/code&gt;的一员。在这里想跟大家分享一下我面对面试刷题的心得~&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;注：Google 的招人模式比较特别，过了 HC 可以视为被 Google 接受并且已经结束了所有技术性面试，简称过了。具体关于申请 Google 的信息会在&lt;strong&gt;后续的文章&lt;/strong&gt;中跟大家分享，敬请期待。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;​
    
    </summary>
    
      <category term="力扣加加" scheme="https://lucifer.ren/blog/categories/%E5%8A%9B%E6%89%A3%E5%8A%A0%E5%8A%A0/"/>
    
      <category term="91天学算法" scheme="https://lucifer.ren/blog/categories/91%E5%A4%A9%E5%AD%A6%E7%AE%97%E6%B3%95/"/>
    
      <category term="谷歌" scheme="https://lucifer.ren/blog/categories/%E8%B0%B7%E6%AD%8C/"/>
    
    
      <category term="数据结构" scheme="https://lucifer.ren/blog/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="算法" scheme="https://lucifer.ren/blog/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="算法提高班" scheme="https://lucifer.ren/blog/tags/%E7%AE%97%E6%B3%95%E6%8F%90%E9%AB%98%E7%8F%AD/"/>
    
      <category term="91天学算法" scheme="https://lucifer.ren/blog/tags/91%E5%A4%A9%E5%AD%A6%E7%AE%97%E6%B3%95/"/>
    
      <category term="力扣加加" scheme="https://lucifer.ren/blog/tags/%E5%8A%9B%E6%89%A3%E5%8A%A0%E5%8A%A0/"/>
    
      <category term="谷歌" scheme="https://lucifer.ren/blog/tags/%E8%B0%B7%E6%AD%8C/"/>
    
  </entry>
  
  <entry>
    <title>史诗级更新，VSCODE 可无缝调试浏览器了！</title>
    <link href="https://lucifer.ren/blog/2021/07/28/vscode-brower-debug/"/>
    <id>https://lucifer.ren/blog/2021/07/28/vscode-brower-debug/</id>
    <published>2021-07-27T16:00:00.000Z</published>
    <updated>2021-07-27T06:44:07.744Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;2021-07-16 微软发布了一篇博客专门介绍了这个功能，VSCODE 牛逼！&lt;/p&gt;
&lt;p&gt;在此之前，你想要在 vscode 内调试 chrome 或者 edge 需要借助于 Chrome Debugger 或者 the Microsoft Edge Debugger extension 这两款 vscode 扩展。&lt;/p&gt;
&lt;p&gt;并且更重要的是，其仅能提供最基本的控制台功能，其他的诸如 network，element 是无法查看的，我们仍然需要到浏览器中查看。&lt;/p&gt;
    
    </summary>
    
      <category term="工具" scheme="https://lucifer.ren/blog/categories/%E5%B7%A5%E5%85%B7/"/>
    
      <category term="VSCODE" scheme="https://lucifer.ren/blog/categories/%E5%B7%A5%E5%85%B7/VSCODE/"/>
    
    
      <category term="VSCODE" scheme="https://lucifer.ren/blog/tags/VSCODE/"/>
    
      <category term="工具" scheme="https://lucifer.ren/blog/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>【91专访】 微软大佬 cabbage 分享算法面试心得</title>
    <link href="https://lucifer.ren/blog/2021/07/27/91algo-interview-cabbage/"/>
    <id>https://lucifer.ren/blog/2021/07/27/91algo-interview-cabbage/</id>
    <published>2021-07-26T16:00:00.000Z</published>
    <updated>2021-07-27T04:07:31.382Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h2&gt;&lt;p&gt;最近得知 cabbage 拿到了&lt;strong&gt;微软的 offer&lt;/strong&gt;，并在准备拿其他&lt;strong&gt;更大&lt;/strong&gt;公司的 offer。就迫不及待地联系了他，希望他本人可以接受采访。于是这篇采访稿就和大家见面了。&lt;/p&gt;
&lt;p&gt;cabbage 是一个做事情非常认真细致的人，对待工作一丝不苟，基本上事情交给他你就可以放心那种，这样的人谁不喜欢？我本人非常看好他，一定可以进更好的公司。&lt;/p&gt;
&lt;p&gt;以下 Q 为 lucifer，A 为 cabbage。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://tva1.sinaimg.cn/large/008i3skNly1gsvbupuya4j30ej0ctaar.jpg&quot; alt&gt;&lt;/p&gt;
&lt;p&gt;​
    
    </summary>
    
      <category term="力扣加加" scheme="https://lucifer.ren/blog/categories/%E5%8A%9B%E6%89%A3%E5%8A%A0%E5%8A%A0/"/>
    
      <category term="91天学算法" scheme="https://lucifer.ren/blog/categories/91%E5%A4%A9%E5%AD%A6%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="数据结构" scheme="https://lucifer.ren/blog/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="算法" scheme="https://lucifer.ren/blog/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="算法提高班" scheme="https://lucifer.ren/blog/tags/%E7%AE%97%E6%B3%95%E6%8F%90%E9%AB%98%E7%8F%AD/"/>
    
      <category term="91天学算法" scheme="https://lucifer.ren/blog/tags/91%E5%A4%A9%E5%AD%A6%E7%AE%97%E6%B3%95/"/>
    
      <category term="力扣加加" scheme="https://lucifer.ren/blog/tags/%E5%8A%9B%E6%89%A3%E5%8A%A0%E5%8A%A0/"/>
    
  </entry>
  
  <entry>
    <title>将命令行工具转为 Web 页面？</title>
    <link href="https://lucifer.ren/blog/2021/07/05/ttw/"/>
    <id>https://lucifer.ren/blog/2021/07/05/ttw/</id>
    <published>2021-07-04T16:00:00.000Z</published>
    <updated>2021-07-05T15:21:43.106Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;这是个什么东西&quot;&gt;&lt;a href=&quot;#这是个什么东西&quot; class=&quot;headerlink&quot; title=&quot;这是个什么东西&quot;&gt;&lt;/a&gt;这是个什么东西&lt;/h2&gt;&lt;p&gt;作为程序员不可避免的会与命令行打交道。我们会用很多的命令行工具，甚至自己开发一些命令行工具。那么如何将一个命令行工具转成 web 页面，变成一个&lt;strong&gt;云端应用&lt;/strong&gt;，方便地与队友共享呢？&lt;/p&gt;
&lt;p&gt;比如我做了一个可以将命令行转为 web 页面的工具叫 ttw(terminal to web)，此时我想将 vi 变成一个 web 页面。&lt;/p&gt;
&lt;p&gt;首先，可以执行如下命令：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ttw  vi&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后就返回一个 web 页面地址，比如是 &lt;a href=&quot;https://lucifer.ren/ttw/dsuh8643&amp;amp;8934&quot;&gt;https://lucifer.ren/ttw/dsuh8643&amp;amp;8934&lt;/a&gt; 打开后会发现就是 vim 的页面，然后你可以像本地命令行一样去进行操作，并得到实时的返回效果。&lt;/p&gt;
&lt;p&gt;至此，我们就完成了将命令行工具转化为 web 页面的功能。&lt;/p&gt;
    
    </summary>
    
      <category term="命令行" scheme="https://lucifer.ren/blog/categories/%E5%91%BD%E4%BB%A4%E8%A1%8C/"/>
    
    
      <category term="命令行" scheme="https://lucifer.ren/blog/tags/%E5%91%BD%E4%BB%A4%E8%A1%8C/"/>
    
  </entry>
  
  <entry>
    <title>从零实现 vite（先导篇）</title>
    <link href="https://lucifer.ren/blog/2021/07/03/mono-vite/"/>
    <id>https://lucifer.ren/blog/2021/07/03/mono-vite/</id>
    <published>2021-07-02T16:00:00.000Z</published>
    <updated>2021-07-03T09:01:16.162Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;来实现一个 vite ？&lt;/p&gt;
    
    </summary>
    
      <category term="vite" scheme="https://lucifer.ren/blog/categories/vite/"/>
    
    
      <category term="vite" scheme="https://lucifer.ren/blog/tags/vite/"/>
    
      <category term="模块" scheme="https://lucifer.ren/blog/tags/%E6%A8%A1%E5%9D%97/"/>
    
  </entry>
  
</feed>
