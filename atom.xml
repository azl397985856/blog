<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>lucifer的网络博客</title>
  
  <subtitle>LeetCode 前端</subtitle>
  <link href="/blog/atom.xml" rel="self"/>
  
  <link href="https://lucifer.ren/blog/"/>
  <updated>2020-09-27T05:14:21.930Z</updated>
  <id>https://lucifer.ren/blog/</id>
  
  <author>
    <name>lucifer</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="https://lucifer.ren/blog/2020/09/27/atMostK/"/>
    <id>https://lucifer.ren/blog/2020/09/27/atMostK/</id>
    <published>2020-09-27T05:14:21.930Z</published>
    <updated>2020-09-27T05:14:21.930Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>TypeScript 练习题</title>
    <link href="https://lucifer.ren/blog/2020/09/27/ts-exercises/"/>
    <id>https://lucifer.ren/blog/2020/09/27/ts-exercises/</id>
    <published>2020-09-26T16:00:00.000Z</published>
    <updated>2020-09-27T09:07:56.984Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;TypeScript 的学习资料非常多，其中也不乏很多优秀的文章和教程。但是目前为止没有一个我特别满意的。原因有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;它们大多数没有一个清晰的主线，而是按照 API 组织章节的，内容在&lt;strong&gt;逻辑上&lt;/strong&gt;比较零散。&lt;/li&gt;
&lt;li&gt;大多是“讲是什么，怎么用“，而不是”讲为什么，讲原理“。&lt;/li&gt;
&lt;li&gt;大多数内容比较枯燥，趣味性比较低。都是干巴巴的文字，没有图片，缺乏能够引起强烈共鸣的例子。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;因此我的想法是做一套不同市面上大多数的 TypeScript 学习教程。以人类认知的角度思考问题，学习 TypeScript，通过通俗易懂的例子和图片来帮助大家建立 TypeScript 世界观。&lt;/p&gt;
&lt;p&gt;系列安排：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://lucifer.ren/blog/2020/08/04/ts-internal/&quot;&gt;上帝视角看 TypeScript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://lucifer.ren/blog/2020/08/15/ts-type-system/&quot;&gt;TypeScript 类型系统&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://lucifer.ren/blog/2020/08/21/ts-type/&quot;&gt;types 和 @types 是什么？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://lucifer.ren/blog/2020/06/16/ts-generics/&quot;&gt;你不知道的 TypeScript 泛型（万字长文，建议收藏）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://lucifer.ren/blog/2020/08/24/ts-config/&quot;&gt;TypeScript 配置文件该怎么写？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;TypeScript 是如何与 React，Vue，Webpack 集成的？&lt;/li&gt;
&lt;li&gt;TypeScript 练习题（就是本文）&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;目录将来可能会有所调整。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;注意，我的系列文章基本不会讲 API，因此需要你有一定的 TypeScript 使用基础，推荐两个学习资料。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://jkchao.github.io/typescript-book-chinese/&quot; title=&quot;深入理解 TypeScript&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;深入理解 TypeScript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.typescriptlang.org/docs/home&quot; title=&quot;TypeScript 官方文档&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;TypeScript 官方文档&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;结合这两个资料和我的系列教程，掌握 TypeScript 指日可待。&lt;/p&gt;
&lt;p&gt;接下来，我们通过几个方面来从宏观的角度来看一下 TypeScript。&lt;/p&gt;
    
    </summary>
    
      <category term="前端" scheme="https://lucifer.ren/blog/categories/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="TypeScript" scheme="https://lucifer.ren/blog/categories/%E5%89%8D%E7%AB%AF/TypeScript/"/>
    
    
      <category term="前端" scheme="https://lucifer.ren/blog/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="TypeScript" scheme="https://lucifer.ren/blog/tags/TypeScript/"/>
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://lucifer.ren/blog/2020/09/19/generator&amp;iterator/"/>
    <id>https://lucifer.ren/blog/2020/09/19/generator&amp;iterator/</id>
    <published>2020-09-19T06:36:38.225Z</published>
    <updated>2020-09-19T06:44:59.504Z</updated>
    
    <summary type="html">
    
      
      
        
        
          
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>字节跳动的算法面试题是什么难度？（第二弹）</title>
    <link href="https://lucifer.ren/blog/2020/09/06/byte-dance-algo-ex-2017/"/>
    <id>https://lucifer.ren/blog/2020/09/06/byte-dance-algo-ex-2017/</id>
    <published>2020-09-05T16:00:00.000Z</published>
    <updated>2020-09-14T09:06:58.597Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;由于 lucifer 我是一个小前端， 最近也在准备写一个《前端如何搞定算法面试》的专栏，因此最近没少看各大公司的面试题。都说字节跳动算法题比较难，我就先拿 ta 下手，做了几套 。这次我们就拿一套 &lt;code&gt;字节跳动2017秋招编程题汇总&lt;/code&gt;来看下字节的算法笔试题的难度几何。地址：&lt;a href=&quot;https://www.nowcoder.com/test/6035789/summary&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.nowcoder.com/test/6035789/summary&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;​
    
    </summary>
    
      <category term="数据结构" scheme="https://lucifer.ren/blog/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="算法" scheme="https://lucifer.ren/blog/categories/%E7%AE%97%E6%B3%95/"/>
    
      <category term="数组" scheme="https://lucifer.ren/blog/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%95%B0%E7%BB%84/"/>
    
      <category term="滑动窗口" scheme="https://lucifer.ren/blog/categories/%E7%AE%97%E6%B3%95/%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3/"/>
    
      <category term="面试" scheme="https://lucifer.ren/blog/categories/%E9%9D%A2%E8%AF%95/"/>
    
      <category term="字节跳动" scheme="https://lucifer.ren/blog/categories/%E9%9D%A2%E8%AF%95/%E5%AD%97%E8%8A%82%E8%B7%B3%E5%8A%A8/"/>
    
    
      <category term="数据结构" scheme="https://lucifer.ren/blog/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="算法" scheme="https://lucifer.ren/blog/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="滑动窗口" scheme="https://lucifer.ren/blog/tags/%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3/"/>
    
      <category term="面试" scheme="https://lucifer.ren/blog/tags/%E9%9D%A2%E8%AF%95/"/>
    
      <category term="字节跳动" scheme="https://lucifer.ren/blog/tags/%E5%AD%97%E8%8A%82%E8%B7%B3%E5%8A%A8/"/>
    
  </entry>
  
  <entry>
    <title>字节跳动的算法面试题是什么难度？</title>
    <link href="https://lucifer.ren/blog/2020/09/06/byte-dance-algo-ex/"/>
    <id>https://lucifer.ren/blog/2020/09/06/byte-dance-algo-ex/</id>
    <published>2020-09-05T16:00:00.000Z</published>
    <updated>2020-09-06T13:14:52.739Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;由于 lucifer 我是一个小前端， 最近也在准备写一个《前端如何搞定算法面试》的专栏，因此最近没少看各大公司的面试题。都说字节跳动算法题比较难，我就先拿 ta 下手，做了几套 。这次我们就拿一套 &lt;code&gt;2018 年的前端校招（第四批）&lt;/code&gt;来看下字节的算法笔试题的难度几何。地址：&lt;a href=&quot;https://www.nowcoder.com/test/8536639/summary&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.nowcoder.com/test/8536639/summary&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;实际上，这套字节的前端岗位笔试题和后端以及算法岗位的笔试题也只有一道题目（红包的设计题被换成了另外一个设计题）不一样而已，因此也不需要担心你不是前端，题目类型和难度和你的岗位不匹配。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;​
    
    </summary>
    
      <category term="数据结构" scheme="https://lucifer.ren/blog/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="算法" scheme="https://lucifer.ren/blog/categories/%E7%AE%97%E6%B3%95/"/>
    
      <category term="数组" scheme="https://lucifer.ren/blog/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%95%B0%E7%BB%84/"/>
    
      <category term="滑动窗口" scheme="https://lucifer.ren/blog/categories/%E7%AE%97%E6%B3%95/%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3/"/>
    
      <category term="面试" scheme="https://lucifer.ren/blog/categories/%E9%9D%A2%E8%AF%95/"/>
    
      <category term="字节跳动" scheme="https://lucifer.ren/blog/categories/%E9%9D%A2%E8%AF%95/%E5%AD%97%E8%8A%82%E8%B7%B3%E5%8A%A8/"/>
    
    
      <category term="数据结构" scheme="https://lucifer.ren/blog/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="算法" scheme="https://lucifer.ren/blog/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="滑动窗口" scheme="https://lucifer.ren/blog/tags/%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3/"/>
    
      <category term="面试" scheme="https://lucifer.ren/blog/tags/%E9%9D%A2%E8%AF%95/"/>
    
      <category term="字节跳动" scheme="https://lucifer.ren/blog/tags/%E5%AD%97%E8%8A%82%E8%B7%B3%E5%8A%A8/"/>
    
  </entry>
  
  <entry>
    <title>用最优雅的方式打开终端</title>
    <link href="https://lucifer.ren/blog/2020/09/03/iterm-window-hotkey/"/>
    <id>https://lucifer.ren/blog/2020/09/03/iterm-window-hotkey/</id>
    <published>2020-09-03T12:15:27.867Z</published>
    <updated>2020-09-03T12:27:49.078Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;如何快速呼出终端&quot;&gt;&lt;a href=&quot;#如何快速呼出终端&quot; class=&quot;headerlink&quot; title=&quot;如何快速呼出终端&quot;&gt;&lt;/a&gt;如何快速呼出终端&lt;/h2&gt;&lt;p&gt;先看效果：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://cdn.jsdelivr.net/gh/azl397985856/cdn/2020-9-3/1599135714685-Kapture%202020-09-03%20at%2019.54.50.mp4&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;视频地址&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Gif 太大， 放不了。 放一个 MP4 文件给大家看吧。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;接下来就教你&lt;strong&gt;随时随地，用最优雅的方式&lt;/strong&gt;。&lt;/p&gt;
    
    </summary>
    
      <category term="工具" scheme="https://lucifer.ren/blog/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="工具" scheme="https://lucifer.ren/blog/tags/%E5%B7%A5%E5%85%B7/"/>
    
      <category term="效率" scheme="https://lucifer.ren/blog/tags/%E6%95%88%E7%8E%87/"/>
    
      <category term="命令行" scheme="https://lucifer.ren/blog/tags/%E5%91%BD%E4%BB%A4%E8%A1%8C/"/>
    
  </entry>
  
  <entry>
    <title>对《丢鸡蛋问题》的一点补充</title>
    <link href="https://lucifer.ren/blog/2020/08/30/887.super-egg-drop-extension/"/>
    <id>https://lucifer.ren/blog/2020/08/30/887.super-egg-drop-extension/</id>
    <published>2020-08-29T16:00:00.000Z</published>
    <updated>2020-08-30T06:07:32.303Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;​ 去年的一年时间，我在群里每天都会出题给大家做。但是就在 2020-03 开始，力扣也开展了每日一题活动。我突然觉得这个每日一题的必要性变得小了很多，并且逐渐减少了出题频率。但是我还是不愿意放弃大家一起集中进行交流学习的机会。于是我打算新开辟一个专题，这个专题一方面要和力扣官方的每日一题重合度低，另一方面要让大家有参与的热情。&lt;/p&gt;
&lt;p&gt;于是【异议！】系列应运而生。它是个什么东西呢？我相信大家一定在平时刷算法的过程中，一定遇到过“这解法怎么想到的？”，“这解法不对吧？”的情况，并且可悲的是没有人能够回答你。来这里，「力扣加加」 来回答你。我们会对大家提出的问题进行筛选，将有意义的问题开放出来给大家讨论和学习。&lt;/p&gt;
&lt;p&gt;本次给大家带来的/是【异议！】系列「第二弹」。&lt;/p&gt;
&lt;p&gt;​
    
    </summary>
    
      <category term="数据结构" scheme="https://lucifer.ren/blog/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="数组" scheme="https://lucifer.ren/blog/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%95%B0%E7%BB%84/"/>
    
    
      <category term="数据结构" scheme="https://lucifer.ren/blog/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="算法" scheme="https://lucifer.ren/blog/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="动态规划" scheme="https://lucifer.ren/blog/tags/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    
  </entry>
  
  <entry>
    <title>动态规划问题为什么要画表格？</title>
    <link href="https://lucifer.ren/blog/2020/08/27/91algo-dp-lecture/"/>
    <id>https://lucifer.ren/blog/2020/08/27/91algo-dp-lecture/</id>
    <published>2020-08-27T02:20:26.566Z</published>
    <updated>2020-08-27T02:21:19.135Z</updated>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本文是我的 91 算法第一期的部分讲义内容。 91 算法第一期已经接近尾声，二期的具体时间关注我的公众号即可，一旦开放，会第一时间在公众号《力扣加加》通知大家。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;动态规划可以理解为是&lt;strong&gt;查表的递归（记忆化）&lt;/strong&gt;。那么什么是递归？什么是查表（记忆化）？&lt;/p&gt;
&lt;p&gt;​
    
    </summary>
    
      <category term="数据结构" scheme="https://lucifer.ren/blog/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="算法" scheme="https://lucifer.ren/blog/categories/%E7%AE%97%E6%B3%95/"/>
    
      <category term="数组" scheme="https://lucifer.ren/blog/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%95%B0%E7%BB%84/"/>
    
      <category term="动态规划" scheme="https://lucifer.ren/blog/categories/%E7%AE%97%E6%B3%95/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    
    
      <category term="数据结构" scheme="https://lucifer.ren/blog/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="算法" scheme="https://lucifer.ren/blog/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="动态规划" scheme="https://lucifer.ren/blog/tags/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    
  </entry>
  
  <entry>
    <title>TypeScript 配置文件该怎么写？</title>
    <link href="https://lucifer.ren/blog/2020/08/24/ts-config/"/>
    <id>https://lucifer.ren/blog/2020/08/24/ts-config/</id>
    <published>2020-08-23T16:00:00.000Z</published>
    <updated>2020-08-25T03:13:58.175Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;TypeScript 的学习资料非常多，其中也不乏很多优秀的文章和教程。但是目前为止没有一个我特别满意的。原因有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;它们大多数没有一个清晰的主线，而是按照 API 组织章节的，内容在&lt;strong&gt;逻辑上&lt;/strong&gt;比较零散。&lt;/li&gt;
&lt;li&gt;大多是“讲是什么，怎么用“，而不是”讲为什么，讲原理“。&lt;/li&gt;
&lt;li&gt;大多数内容比较枯燥，趣味性比较低。都是干巴巴的文字，没有图片，缺乏能够引起强烈共鸣的例子。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;因此我的想法是做一套不同市面上大多数的 TypeScript 学习教程。以人类认知的角度思考问题，学习 TypeScript，通过通俗易懂的例子和图片来帮助大家建立 TypeScript 世界观。&lt;/p&gt;
&lt;p&gt;系列安排：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://lucifer.ren/blog/2020/08/04/ts-internal/&quot;&gt;上帝视角看 TypeScript（已发布）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://lucifer.ren/blog/2020/08/15/ts-type-system/&quot;&gt;TypeScript 类型系统（已发布）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://lucifer.ren/blog/2020/08/21/ts-type/&quot;&gt;types 和 @types 是什么？（已发布）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://lucifer.ren/blog/2020/06/16/ts-generics/&quot;&gt;你不知道的 TypeScript 泛型（万字长文，建议收藏）（已发布）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;TypeScript 配置文件该怎么写？（就是本文）&lt;/li&gt;
&lt;li&gt;TypeScript 是如何与 React，Vue，Webpack 集成的？&lt;/li&gt;
&lt;li&gt;TypeScript 练习题&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;目录将来可能会有所调整。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;注意，我的系列文章基本不会讲 API，因此需要你有一定的 TypeScript 使用基础，推荐两个学习资料。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://jkchao.github.io/typescript-book-chinese/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;深入理解 TypeScript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.typescriptlang.org/docs/home&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;官方文档&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;结合这两个资料和我的系列教程，掌握 TypeScript 指日可待。&lt;/p&gt;
&lt;p&gt;接下来，我们通过几个方面来从宏观的角度来看一下 TypeScript。&lt;/p&gt;
    
    </summary>
    
      <category term="前端" scheme="https://lucifer.ren/blog/categories/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="TypeScript" scheme="https://lucifer.ren/blog/categories/%E5%89%8D%E7%AB%AF/TypeScript/"/>
    
    
      <category term="前端" scheme="https://lucifer.ren/blog/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="TypeScript" scheme="https://lucifer.ren/blog/tags/TypeScript/"/>
    
  </entry>
  
  <entry>
    <title>types 和 @types 是什么？</title>
    <link href="https://lucifer.ren/blog/2020/08/21/ts-type/"/>
    <id>https://lucifer.ren/blog/2020/08/21/ts-type/</id>
    <published>2020-08-20T16:00:00.000Z</published>
    <updated>2020-08-22T04:07:15.485Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;TypeScript 的学习资料非常多，其中也不乏很多优秀的文章和教程。但是目前为止没有一个我特别满意的。原因有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;它们大多数没有一个清晰的主线，而是按照 API 组织章节的，内容在&lt;strong&gt;&lt;em&gt;逻辑上&lt;/em&gt;&lt;/strong&gt;比较零散。&lt;/li&gt;
&lt;li&gt;大多是“讲是什么，怎么用“，而不是”讲为什么，讲原理“。&lt;/li&gt;
&lt;li&gt;大多数内容比较枯燥，趣味性比较低。都是干巴巴的文字，没有图片，缺乏能够引起强烈共鸣的例子。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;因此我的想法是做一套不同市面上大多数的 TypeScript 学习教程。以人类认知的角度思考问题，学习 TypeScript，通过通俗易懂的例子和图片来帮助大家建立 TypeScript 世界观。&lt;/p&gt;
&lt;p&gt;系列安排：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://lucifer.ren/blog/2020/08/04/ts-internal/&quot;&gt;上帝视角看 TypeScript（已发布）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://lucifer.ren/blog/2020/08/15/ts-type-system/&quot;&gt;TypeScript 类型系统（已发布）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;types 和 @types 是什么？（就是本文）&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://lucifer.ren/blog/2020/06/16/ts-generics/&quot;&gt;你不知道的 TypeScript 泛型（万字长文，建议收藏）&lt;/a&gt;（已发布）&lt;/li&gt;
&lt;li&gt;TypeScript 配置文件该怎么写？&lt;/li&gt;
&lt;li&gt;TypeScript 是如何与 React，Vue，Webpack 集成的？&lt;/li&gt;
&lt;li&gt;TypeScript 练习题&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;目录将来可能会有所调整。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;注意，我的系列文章基本不会讲 API，因此需要你有一定的 TypeScript 使用基础，推荐两个学习资料。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://jkchao.github.io/typescript-book-chinese/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;深入理解 TypeScript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.typescriptlang.org/docs/home&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;官方文档&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;结合这两个资料和我的系列教程，掌握 TypeScript 指日可待。&lt;/p&gt;
&lt;p&gt;接下来，我们通过几个方面来从宏观的角度来看一下 TypeScript。&lt;/p&gt;
    
    </summary>
    
      <category term="前端" scheme="https://lucifer.ren/blog/categories/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="TypeScript" scheme="https://lucifer.ren/blog/categories/%E5%89%8D%E7%AB%AF/TypeScript/"/>
    
    
      <category term="前端" scheme="https://lucifer.ren/blog/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="TypeScript" scheme="https://lucifer.ren/blog/tags/TypeScript/"/>
    
  </entry>
  
  <entry>
    <title>力扣刷题插件</title>
    <link href="https://lucifer.ren/blog/2020/08/16/leetcode-cheat/"/>
    <id>https://lucifer.ren/blog/2020/08/16/leetcode-cheat/</id>
    <published>2020-08-16T08:56:49.947Z</published>
    <updated>2020-08-26T05:06:09.396Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;之前我做了一个视频， 介绍我的刷题浏览器扩展插件，视频地址：&lt;a href=&quot;https://www.bilibili.com/video/BV1UK4y1x7zj/。&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.bilibili.com/video/BV1UK4y1x7zj/。&lt;/a&gt; 今天我在上次的基础上增加了部分公司的显示以及优化了若干体验功能。&lt;/p&gt;
    
    </summary>
    
      <category term="LeetCode" scheme="https://lucifer.ren/blog/categories/LeetCode/"/>
    
      <category term="插件" scheme="https://lucifer.ren/blog/categories/%E6%8F%92%E4%BB%B6/"/>
    
    
      <category term="LeetCode" scheme="https://lucifer.ren/blog/tags/LeetCode/"/>
    
      <category term="插件" scheme="https://lucifer.ren/blog/tags/%E6%8F%92%E4%BB%B6/"/>
    
      <category term="刷题" scheme="https://lucifer.ren/blog/tags/%E5%88%B7%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>TypeScript 类型系统</title>
    <link href="https://lucifer.ren/blog/2020/08/15/ts-type-system/"/>
    <id>https://lucifer.ren/blog/2020/08/15/ts-type-system/</id>
    <published>2020-08-14T16:00:00.000Z</published>
    <updated>2020-09-24T07:48:29.039Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;TypeScript 的学习资料非常多，其中也不乏很多优秀的文章和教程。但是目前为止没有一个我特别满意的。原因有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;它们大多数没有一个清晰的主线，而是按照 API 组织章节的，内容在&lt;strong&gt;逻辑上&lt;/strong&gt;比较零散。&lt;/li&gt;
&lt;li&gt;大多是“讲是什么，怎么用“，而不是”讲为什么，讲原理“。&lt;/li&gt;
&lt;li&gt;大多数内容比较枯燥，趣味性比较低。都是干巴巴的文字，没有图片，缺乏能够引起强烈共鸣的例子。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;因此我的想法是做一套不同市面上大多数的 TypeScript 学习教程。以人类认知的角度思考问题，学习 TypeScript，通过通俗易懂的例子和图片来帮助大家建立 TypeScript 世界观。&lt;/p&gt;
&lt;p&gt;系列安排：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://lucifer.ren/blog/2020/08/04/ts-internal/&quot; title=&quot;上帝视角看 TypeScrip&quot;&gt;上帝视角看 TypeScript&lt;/a&gt;（已发布）&lt;/li&gt;
&lt;li&gt;TypeScript 类型系统（就是本文）&lt;/li&gt;
&lt;li&gt;types 和 @types 是什么？&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://lucifer.ren/blog/2020/06/16/ts-generics/&quot; title=&quot;你不知道的 TypeScript 泛型（万字长文，建议收藏）&quot;&gt;你不知道的 TypeScript 泛型（万字长文，建议收藏）&lt;/a&gt;（已发布）&lt;/li&gt;
&lt;li&gt;TypeScript 配置文件该怎么写？&lt;/li&gt;
&lt;li&gt;TypeScript 是如何与 React，Vue，Webpack 集成的？&lt;/li&gt;
&lt;li&gt;TypeScript 练习题&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;目录将来可能会有所调整。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;注意，我的系列文章基本不会讲 API，因此需要你有一定的 TypeScript 使用基础，推荐两个学习资料。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://jkchao.github.io/typescript-book-chinese/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;深入理解 TypeScript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.typescriptlang.org/docs/home&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;官方文档&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;结合这两个资料和我的系列教程，掌握 TypeScript 指日可待。&lt;/p&gt;
&lt;p&gt;接下来，我们通过几个方面来从宏观的角度来看一下 TypeScript。&lt;/p&gt;
    
    </summary>
    
      <category term="前端" scheme="https://lucifer.ren/blog/categories/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="TypeScript" scheme="https://lucifer.ren/blog/categories/%E5%89%8D%E7%AB%AF/TypeScript/"/>
    
    
      <category term="前端" scheme="https://lucifer.ren/blog/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="TypeScript" scheme="https://lucifer.ren/blog/tags/TypeScript/"/>
    
  </entry>
  
  <entry>
    <title>提前批算法工程师面试之路</title>
    <link href="https://lucifer.ren/blog/2020/08/13/interview-log-tqp/"/>
    <id>https://lucifer.ren/blog/2020/08/13/interview-log-tqp/</id>
    <published>2020-08-13T02:12:17.419Z</published>
    <updated>2020-08-13T02:13:27.876Z</updated>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;作者：宝石&lt;/li&gt;
&lt;li&gt;校对&amp;amp;整理：lucifer&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="前端" scheme="https://lucifer.ren/blog/categories/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="面经" scheme="https://lucifer.ren/blog/categories/%E9%9D%A2%E7%BB%8F/"/>
    
      <category term="校招" scheme="https://lucifer.ren/blog/categories/%E6%A0%A1%E6%8B%9B/"/>
    
      <category term="百度" scheme="https://lucifer.ren/blog/categories/%E7%99%BE%E5%BA%A6/"/>
    
    
      <category term="前端" scheme="https://lucifer.ren/blog/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="面经" scheme="https://lucifer.ren/blog/tags/%E9%9D%A2%E7%BB%8F/"/>
    
      <category term="校招" scheme="https://lucifer.ren/blog/tags/%E6%A0%A1%E6%8B%9B/"/>
    
      <category term="百度" scheme="https://lucifer.ren/blog/tags/%E7%99%BE%E5%BA%A6/"/>
    
  </entry>
  
  <entry>
    <title>Webkit 内核初探</title>
    <link href="https://lucifer.ren/blog/2020/08/11/webkit-intro/"/>
    <id>https://lucifer.ren/blog/2020/08/11/webkit-intro/</id>
    <published>2020-08-10T16:00:00.000Z</published>
    <updated>2020-08-11T06:40:39.406Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;作者: 阿吉&lt;br&gt;校对&amp;amp;整理: lucifer&lt;/p&gt;
&lt;p&gt;当下浏览器内核主要有 Webkit、Blink 等。本文分析注意是自 2001 年 Webkit 从 KHTML 分离出去并开源后，各大浏览器厂商魔改 Webkit 的时期，这些魔改的内核最终以 Chromium 受众最多而脱颖而出。本文就以 Chromium 浏览器架构为基础，逐层探入进行剖析。&lt;/p&gt;
    
    </summary>
    
      <category term="前端" scheme="https://lucifer.ren/blog/categories/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="浏览器" scheme="https://lucifer.ren/blog/categories/%E6%B5%8F%E8%A7%88%E5%99%A8/"/>
    
      <category term="浏览器" scheme="https://lucifer.ren/blog/categories/%E5%89%8D%E7%AB%AF/%E6%B5%8F%E8%A7%88%E5%99%A8/"/>
    
      <category term="webkit" scheme="https://lucifer.ren/blog/categories/%E5%89%8D%E7%AB%AF/webkit/"/>
    
      <category term="webkit" scheme="https://lucifer.ren/blog/categories/%E6%B5%8F%E8%A7%88%E5%99%A8/webkit/"/>
    
    
      <category term="前端" scheme="https://lucifer.ren/blog/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="浏览器" scheme="https://lucifer.ren/blog/tags/%E6%B5%8F%E8%A7%88%E5%99%A8/"/>
    
      <category term="webkit" scheme="https://lucifer.ren/blog/tags/webkit/"/>
    
  </entry>
  
  <entry>
    <title>好未来-北京-视频面试</title>
    <link href="https://lucifer.ren/blog/2020/08/09/interview-log-haoweilai/"/>
    <id>https://lucifer.ren/blog/2020/08/09/interview-log-haoweilai/</id>
    <published>2020-08-09T02:46:33.410Z</published>
    <updated>2020-08-09T03:25:22.406Z</updated>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;作者：阿吉&lt;/li&gt;
&lt;li&gt;整理&amp;amp;点评：lucifer&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="前端" scheme="https://lucifer.ren/blog/categories/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="面经" scheme="https://lucifer.ren/blog/categories/%E9%9D%A2%E7%BB%8F/"/>
    
      <category term="校招" scheme="https://lucifer.ren/blog/categories/%E6%A0%A1%E6%8B%9B/"/>
    
      <category term="好未来" scheme="https://lucifer.ren/blog/categories/%E5%A5%BD%E6%9C%AA%E6%9D%A5/"/>
    
    
      <category term="前端" scheme="https://lucifer.ren/blog/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="面经" scheme="https://lucifer.ren/blog/tags/%E9%9D%A2%E7%BB%8F/"/>
    
      <category term="校招" scheme="https://lucifer.ren/blog/tags/%E6%A0%A1%E6%8B%9B/"/>
    
      <category term="好未来" scheme="https://lucifer.ren/blog/tags/%E5%A5%BD%E6%9C%AA%E6%9D%A5/"/>
    
  </entry>
  
  <entry>
    <title>上帝视角看 TypeScript</title>
    <link href="https://lucifer.ren/blog/2020/08/04/ts-internal/"/>
    <id>https://lucifer.ren/blog/2020/08/04/ts-internal/</id>
    <published>2020-08-04T03:55:11.375Z</published>
    <updated>2020-08-04T03:55:47.660Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;TypeScript 的学习资料非常多，其中也不乏很多优秀的文章和教程。但是目前为止没有一个我特别满意的。原因有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;它们大多数没有一个清晰的主线，而是按照 API 组织章节的，内容在&lt;strong&gt;逻辑上&lt;/strong&gt;比较零散。&lt;/li&gt;
&lt;li&gt;大多是“讲是什么，怎么用“，而不是”讲为什么，讲原理“。&lt;/li&gt;
&lt;li&gt;大多数内容比较枯燥，趣味性比较低。都是干巴巴的文字，没有图片，缺乏能够引起强烈共鸣的例子。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;因此我的想法是做一套不同市面上大多数的 TypeScript 学习教程。以人类认知的角度思考问题，学习 TypeScript，通过通俗易懂的例子和图片来帮助大家建立 TypeScript 世界观。 而本篇文章则是这个系列的开篇。&lt;/p&gt;
&lt;p&gt;系列安排：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;上帝视角看 TypeScript（就是本文）&lt;/li&gt;
&lt;li&gt;TypeScript 类型系统&lt;/li&gt;
&lt;li&gt;什么是 types？什么是 @types？&lt;/li&gt;
&lt;li&gt;类型推导， 类型断言与类型保护&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://lucifer.ren/blog/2020/06/16/ts-generics/&quot;&gt;你不知道的 TypeScript 泛型（万字长文，建议收藏）&lt;/a&gt;（已发布）&lt;/li&gt;
&lt;li&gt;TypeScript 练习题&lt;/li&gt;
&lt;li&gt;TypeScript 配置文件该怎么写？&lt;/li&gt;
&lt;li&gt;TypeScript 是如何与 React，Vue，Webpack 集成的？&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;目录将来可能会有所调整。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;注意，我的系列文章基本不会讲 API，因此需要你有一定的 TypeScript 使用基础，推荐两个学习资料。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://jkchao.github.io/typescript-book-chinese/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;深入理解 TypeScript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.typescriptlang.org/docs/home&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;官方文档&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;结合这两个资料和我的系列教程，掌握 TypeScript 指日可待。&lt;/p&gt;
&lt;p&gt;接下来，我们通过几个方面来从宏观的角度来看一下 TypeScript。&lt;/p&gt;
    
    </summary>
    
      <category term="前端" scheme="https://lucifer.ren/blog/categories/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="TypeScript" scheme="https://lucifer.ren/blog/categories/%E5%89%8D%E7%AB%AF/TypeScript/"/>
    
      <category term="泛型" scheme="https://lucifer.ren/blog/categories/%E5%89%8D%E7%AB%AF/TypeScript/%E6%B3%9B%E5%9E%8B/"/>
    
    
      <category term="前端" scheme="https://lucifer.ren/blog/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="TypeScript" scheme="https://lucifer.ren/blog/tags/TypeScript/"/>
    
      <category term="泛型" scheme="https://lucifer.ren/blog/tags/%E6%B3%9B%E5%9E%8B/"/>
    
  </entry>
  
  <entry>
    <title>《我是你的妈妈呀》 - 第一期</title>
    <link href="https://lucifer.ren/blog/2020/08/03/mother-01/"/>
    <id>https://lucifer.ren/blog/2020/08/03/mother-01/</id>
    <published>2020-08-02T16:00:00.000Z</published>
    <updated>2020-08-13T05:47:53.521Z</updated>
    
    <summary type="html">
    
      
      
        
        
          
        
      
    
    </summary>
    
      <category term="算法" scheme="https://lucifer.ren/blog/categories/%E7%AE%97%E6%B3%95/"/>
    
      <category term="母题" scheme="https://lucifer.ren/blog/categories/%E7%AE%97%E6%B3%95/%E6%AF%8D%E9%A2%98/"/>
    
    
      <category term="算法" scheme="https://lucifer.ren/blog/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="母题" scheme="https://lucifer.ren/blog/tags/%E6%AF%8D%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>一文带你看懂二叉树的序列化</title>
    <link href="https://lucifer.ren/blog/2020/07/24/serialize/"/>
    <id>https://lucifer.ren/blog/2020/07/24/serialize/</id>
    <published>2020-07-24T12:52:41.698Z</published>
    <updated>2020-07-26T14:39:44.168Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;我们先来看下什么是序列化，以下定义来自维基百科：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;序列化（serialization）在计算机科学的数据处理中，是指将数据结构或对象状态转换成可取用格式（例如存成文件，存于缓冲，或经由网络中发送），以留待后续在相同或另一台计算机环境中，能恢复原先状态的过程。依照序列化格式重新获取字节的结果时，可以利用它来产生与原始对象相同语义的副本。对于许多对象，像是使用大量引用的复杂对象，这种序列化重建的过程并不容易。面向对象中的对象序列化，并不概括之前原始对象所关系的函数。这种过程也称为对象编组（marshalling）。从一系列字节提取数据结构的反向操作，是反序列化（也称为解编组、deserialization、unmarshalling）。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;可见，序列化和反序列化在计算机科学中的应用还是非常广泛的。就拿 LeetCode 平台来说，其允许用户输入形如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[1,2,3,null,null,4,5]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;这样的数据结构来描述一颗树：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://tva1.sinaimg.cn/large/007S8ZIlly1gh2dqqnyzwj30ba0baglw.jpg&quot; alt&gt;&lt;/p&gt;
&lt;p&gt;([1,2,3,null,null,4,5] 对应的二叉树)&lt;/p&gt;
&lt;p&gt;其实序列化和反序列化只是一个概念，不是一种具体的算法，而是很多的算法。并且针对不同的数据结构，算法也会不一样。本文主要讲述的是二叉树的序列化和反序列化。看完本文之后，你就可以放心大胆地去 AC 以下两道题：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/serialize-and-deserialize-bst/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;449. 序列化和反序列化二叉搜索树(中等)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/serialize-and-deserialize-binary-tree/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;297. 二叉树的序列化与反序列化(困难)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="LeetCode" scheme="https://lucifer.ren/blog/categories/LeetCode/"/>
    
      <category term="算法，序列化" scheme="https://lucifer.ren/blog/categories/%E7%AE%97%E6%B3%95%EF%BC%8C%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    
      <category term="数据结构，二叉树" scheme="https://lucifer.ren/blog/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%EF%BC%8C%E4%BA%8C%E5%8F%89%E6%A0%91/"/>
    
    
      <category term="二叉树" scheme="https://lucifer.ren/blog/tags/%E4%BA%8C%E5%8F%89%E6%A0%91/"/>
    
      <category term="序列化" scheme="https://lucifer.ren/blog/tags/%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>平衡二叉树专题</title>
    <link href="https://lucifer.ren/blog/2020/07/21/balanced-tree/"/>
    <id>https://lucifer.ren/blog/2020/07/21/balanced-tree/</id>
    <published>2020-07-20T16:00:00.000Z</published>
    <updated>2020-07-25T02:01:36.934Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;力扣关于平衡二叉树的题目还是有一些的，并且都非常经典，推荐大家练习。今天给大家精选了 4 道题，如果你彻底搞明白了这几道题，碰到其他的平衡二叉树的题目应该不至于没有思路。当你领会了我的思路之后， 建议再找几个题目练手，巩固一下学习成果。&lt;/p&gt;
    
    </summary>
    
      <category term="数据结构" scheme="https://lucifer.ren/blog/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="平衡二叉树" scheme="https://lucifer.ren/blog/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%B9%B3%E8%A1%A1%E4%BA%8C%E5%8F%89%E6%A0%91/"/>
    
      <category term="二叉搜索树" scheme="https://lucifer.ren/blog/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91/"/>
    
    
      <category term="数据结构" scheme="https://lucifer.ren/blog/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="算法" scheme="https://lucifer.ren/blog/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="二叉树" scheme="https://lucifer.ren/blog/tags/%E4%BA%8C%E5%8F%89%E6%A0%91/"/>
    
  </entry>
  
  <entry>
    <title>【LeetCode日记】 611. 有效三角形的个数</title>
    <link href="https://lucifer.ren/blog/2020/07/20/611.triangle/"/>
    <id>https://lucifer.ren/blog/2020/07/20/611.triangle/</id>
    <published>2020-07-20T11:58:28.740Z</published>
    <updated>2020-07-20T11:59:18.279Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;题目地址： &lt;a href=&quot;https://leetcode-cn.com/problems/valid-triangle-number/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://leetcode-cn.com/problems/valid-triangle-number/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;​
    
    </summary>
    
      <category term="数据结构" scheme="https://lucifer.ren/blog/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="算法" scheme="https://lucifer.ren/blog/categories/%E7%AE%97%E6%B3%95/"/>
    
      <category term="数组" scheme="https://lucifer.ren/blog/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%95%B0%E7%BB%84/"/>
    
      <category term="Medium" scheme="https://lucifer.ren/blog/categories/Medium/"/>
    
      <category term="双指针" scheme="https://lucifer.ren/blog/categories/%E7%AE%97%E6%B3%95/%E5%8F%8C%E6%8C%87%E9%92%88/"/>
    
    
      <category term="数据结构" scheme="https://lucifer.ren/blog/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="算法" scheme="https://lucifer.ren/blog/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="LeetCode日记" scheme="https://lucifer.ren/blog/tags/LeetCode%E6%97%A5%E8%AE%B0/"/>
    
      <category term="Medium" scheme="https://lucifer.ren/blog/tags/Medium/"/>
    
  </entry>
  
</feed>
